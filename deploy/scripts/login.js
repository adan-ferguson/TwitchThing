(()=>{"use strict";var e,t,r,n,o,i,s,a;(a=e||(e={})).MissingApiKey="MISSING_API_KEY",a.ModalNotReady="MODAL_NOT_READY",a.MalformedResponse="MALFORMED_RESPONSE",a.InvalidArgument="INVALID_ARGUMENT",a.ExtensionNotInitialized="EXTENSION_NOT_INITIALIZED",a.IncompatibleExtensions="INCOMPATIBLE_EXTENSIONS",function(e){e.SyncWeb3Method="SYNC_WEB3_METHOD",e.DuplicateIframe="DUPLICATE_IFRAME",e.ReactNativeEndpointConfiguration="REACT_NATIVE_ENDPOINT_CONFIGURATION",e.DeprecationNotice="DEPRECATION_NOTICE"}(t||(t={})),function(e){e[e.ParseError=-32700]="ParseError",e[e.InvalidRequest=-32600]="InvalidRequest",e[e.MethodNotFound=-32601]="MethodNotFound",e[e.InvalidParams=-32602]="InvalidParams",e[e.InternalError=-32603]="InternalError",e[e.MagicLinkFailedVerification=-1e4]="MagicLinkFailedVerification",e[e.MagicLinkExpired=-10001]="MagicLinkExpired",e[e.MagicLinkRateLimited=-10002]="MagicLinkRateLimited",e[e.MagicLinkInvalidRedirectURL=-10006]="MagicLinkInvalidRedirectURL",e[e.UserAlreadyLoggedIn=-10003]="UserAlreadyLoggedIn",e[e.UpdateEmailFailed=-10004]="UpdateEmailFailed",e[e.UserRequestEditEmail=-10005]="UserRequestEditEmail",e[e.InactiveRecipient=-10010]="InactiveRecipient",e[e.AccessDeniedToUser=-10011]="AccessDeniedToUser"}(r||(r={})),function(e){e.LoginWithSms="magic_auth_login_with_sms",e.LoginWithMagicLink="magic_auth_login_with_magic_link",e.LoginWithCredential="magic_auth_login_with_credential",e.GetIdToken="magic_auth_get_id_token",e.GenerateIdToken="magic_auth_generate_id_token",e.GetMetadata="magic_auth_get_metadata",e.IsLoggedIn="magic_auth_is_logged_in",e.Logout="magic_auth_logout",e.UpdateEmail="magic_auth_update_email",e.UserSettings="magic_auth_settings",e.UserSettingsTestMode="magic_auth_settings_testing_mode",e.LoginWithSmsTestMode="magic_auth_login_with_sms_testing_mode",e.LoginWithMagicLinkTestMode="magic_login_with_magic_link_testing_mode",e.LoginWithCredentialTestMode="magic_auth_login_with_credential_testing_mode",e.GetIdTokenTestMode="magic_auth_get_id_token_testing_mode",e.GenerateIdTokenTestMode="magic_auth_generate_id_token_testing_mode",e.GetMetadataTestMode="magic_auth_get_metadata_testing_mode",e.IsLoggedInTestMode="magic_auth_is_logged_in_testing_mode",e.LogoutTestMode="magic_auth_logout_testing_mode",e.UpdateEmailTestMode="magic_auth_update_email_testing_mode"}(n||(n={})),function(e){e.MAGIC_HANDLE_RESPONSE="MAGIC_HANDLE_RESPONSE",e.MAGIC_OVERLAY_READY="MAGIC_OVERLAY_READY",e.MAGIC_SHOW_OVERLAY="MAGIC_SHOW_OVERLAY",e.MAGIC_HIDE_OVERLAY="MAGIC_HIDE_OVERLAY",e.MAGIC_HANDLE_EVENT="MAGIC_HANDLE_EVENT"}(o||(o={})),function(e){e.MAGIC_HANDLE_REQUEST="MAGIC_HANDLE_REQUEST"}(i||(i={})),function(e){e.Harmony="HARMONY"}(s||(s={}));const c={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER||9007199254740991,MAX_SAFE_COMPONENT_LENGTH:16},u="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{},l=function(e){const t={exports:{}};return function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:r}=c,n=(t=e.exports={}).re=[],o=t.src=[],i=t.t={};let s=0;const a=(e,t,r)=>{const a=s++;u(a,t),i[e]=a,o[a]=t,n[a]=new RegExp(t,r?"g":void 0)};a("NUMERICIDENTIFIER","0|[1-9]\\d*"),a("NUMERICIDENTIFIERLOOSE","[0-9]+"),a("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),a("MAINVERSION",`(${o[i.NUMERICIDENTIFIER]})\\.(${o[i.NUMERICIDENTIFIER]})\\.(${o[i.NUMERICIDENTIFIER]})`),a("MAINVERSIONLOOSE",`(${o[i.NUMERICIDENTIFIERLOOSE]})\\.(${o[i.NUMERICIDENTIFIERLOOSE]})\\.(${o[i.NUMERICIDENTIFIERLOOSE]})`),a("PRERELEASEIDENTIFIER",`(?:${o[i.NUMERICIDENTIFIER]}|${o[i.NONNUMERICIDENTIFIER]})`),a("PRERELEASEIDENTIFIERLOOSE",`(?:${o[i.NUMERICIDENTIFIERLOOSE]}|${o[i.NONNUMERICIDENTIFIER]})`),a("PRERELEASE",`(?:-(${o[i.PRERELEASEIDENTIFIER]}(?:\\.${o[i.PRERELEASEIDENTIFIER]})*))`),a("PRERELEASELOOSE",`(?:-?(${o[i.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${o[i.PRERELEASEIDENTIFIERLOOSE]})*))`),a("BUILDIDENTIFIER","[0-9A-Za-z-]+"),a("BUILD",`(?:\\+(${o[i.BUILDIDENTIFIER]}(?:\\.${o[i.BUILDIDENTIFIER]})*))`),a("FULLPLAIN",`v?${o[i.MAINVERSION]}${o[i.PRERELEASE]}?${o[i.BUILD]}?`),a("FULL",`^${o[i.FULLPLAIN]}$`),a("LOOSEPLAIN",`[v=\\s]*${o[i.MAINVERSIONLOOSE]}${o[i.PRERELEASELOOSE]}?${o[i.BUILD]}?`),a("LOOSE",`^${o[i.LOOSEPLAIN]}$`),a("GTLT","((?:<|>)?=?)"),a("XRANGEIDENTIFIERLOOSE",`${o[i.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),a("XRANGEIDENTIFIER",`${o[i.NUMERICIDENTIFIER]}|x|X|\\*`),a("XRANGEPLAIN",`[v=\\s]*(${o[i.XRANGEIDENTIFIER]})(?:\\.(${o[i.XRANGEIDENTIFIER]})(?:\\.(${o[i.XRANGEIDENTIFIER]})(?:${o[i.PRERELEASE]})?${o[i.BUILD]}?)?)?`),a("XRANGEPLAINLOOSE",`[v=\\s]*(${o[i.XRANGEIDENTIFIERLOOSE]})(?:\\.(${o[i.XRANGEIDENTIFIERLOOSE]})(?:\\.(${o[i.XRANGEIDENTIFIERLOOSE]})(?:${o[i.PRERELEASELOOSE]})?${o[i.BUILD]}?)?)?`),a("XRANGE",`^${o[i.GTLT]}\\s*${o[i.XRANGEPLAIN]}$`),a("XRANGELOOSE",`^${o[i.GTLT]}\\s*${o[i.XRANGEPLAINLOOSE]}$`),a("COERCE",`(^|[^\\d])(\\d{1,${r}})(?:\\.(\\d{1,${r}}))?(?:\\.(\\d{1,${r}}))?(?:$|[^\\d])`),a("COERCERTL",o[i.COERCE],!0),a("LONETILDE","(?:~>?)"),a("TILDETRIM",`(\\s*)${o[i.LONETILDE]}\\s+`,!0),t.tildeTrimReplace="$1~",a("TILDE",`^${o[i.LONETILDE]}${o[i.XRANGEPLAIN]}$`),a("TILDELOOSE",`^${o[i.LONETILDE]}${o[i.XRANGEPLAINLOOSE]}$`),a("LONECARET","(?:\\^)"),a("CARETTRIM",`(\\s*)${o[i.LONECARET]}\\s+`,!0),t.caretTrimReplace="$1^",a("CARET",`^${o[i.LONECARET]}${o[i.XRANGEPLAIN]}$`),a("CARETLOOSE",`^${o[i.LONECARET]}${o[i.XRANGEPLAINLOOSE]}$`),a("COMPARATORLOOSE",`^${o[i.GTLT]}\\s*(${o[i.LOOSEPLAIN]})$|^$`),a("COMPARATOR",`^${o[i.GTLT]}\\s*(${o[i.FULLPLAIN]})$|^$`),a("COMPARATORTRIM",`(\\s*)${o[i.GTLT]}\\s*(${o[i.LOOSEPLAIN]}|${o[i.XRANGEPLAIN]})`,!0),t.comparatorTrimReplace="$1$2$3",a("HYPHENRANGE",`^\\s*(${o[i.XRANGEPLAIN]})\\s+-\\s+(${o[i.XRANGEPLAIN]})\\s*$`),a("HYPHENRANGELOOSE",`^\\s*(${o[i.XRANGEPLAINLOOSE]})\\s+-\\s+(${o[i.XRANGEPLAINLOOSE]})\\s*$`),a("STAR","(<|>)?=?\\s*\\*"),a("GTE0","^\\s*>=\\s*0.0.0\\s*$"),a("GTE0PRE","^\\s*>=\\s*0.0.0-0\\s*$")}(t,t.exports),t.exports}(),d=/^[0-9]+$/,f=(e,t)=>{const r=d.test(e),n=d.test(t);return r&&n&&(e=+e,t=+t),e===t?0:r&&!n?-1:n&&!r?1:e<t?-1:1},h={compareIdentifiers:f,rcompareIdentifiers:(e,t)=>f(t,e)},{MAX_LENGTH:p,MAX_SAFE_INTEGER:v}=c,{re:m,t:y}=l,{compareIdentifiers:g}=h;class _{constructor(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof _){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError(`Invalid Version: ${e}`);if(e.length>p)throw new TypeError(`version is longer than ${p} characters`);u("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const r=e.trim().match(t.loose?m[y.LOOSE]:m[y.FULL]);if(!r)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+r[1],this.minor=+r[2],this.patch=+r[3],this.major>v||this.major<0)throw new TypeError("Invalid major version");if(this.minor>v||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>v||this.patch<0)throw new TypeError("Invalid patch version");this.prerelease=r[4]?r[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<v)return t}return e})):[],this.build=r[5]?r[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(e){if(u("SemVer.compare",this.version,this.options,e),!(e instanceof _)){if("string"==typeof e&&e===this.version)return 0;e=new _(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof _||(e=new _(e,this.options)),g(this.major,e.major)||g(this.minor,e.minor)||g(this.patch,e.patch)}comparePre(e){if(e instanceof _||(e=new _(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const r=this.prerelease[t],n=e.prerelease[t];if(u("prerelease compare",t,r,n),void 0===r&&void 0===n)return 0;if(void 0===n)return 1;if(void 0===r)return-1;if(r!==n)return g(r,n)}while(++t)}compareBuild(e){e instanceof _||(e=new _(e,this.options));let t=0;do{const r=this.build[t],n=e.build[t];if(u("prerelease compare",t,r,n),void 0===r&&void 0===n)return 0;if(void 0===n)return 1;if(void 0===r)return-1;if(r!==n)return g(r,n)}while(++t)}inc(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error(`invalid increment argument: ${e}`)}return this.format(),this.raw=this.version,this}}const E=(e,t,r)=>new _(e,r).compare(new _(t,r)),b=(e,t,r,n)=>{switch(t){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof r&&(r=r.version),e===r;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof r&&(r=r.version),e!==r;case"":case"=":case"==":return((e,t,r)=>0===E(e,t,r))(e,r,n);case"!=":return((e,t,r)=>0!==E(e,t,r))(e,r,n);case">":return((e,t,r)=>E(e,t,r)>0)(e,r,n);case">=":return((e,t,r)=>E(e,t,r)>=0)(e,r,n);case"<":return((e,t,r)=>E(e,t,r)<0)(e,r,n);case"<=":return((e,t,r)=>E(e,t,r)<=0)(e,r,n);default:throw new TypeError(`Invalid operator: ${t}`)}},I=Symbol("SemVer ANY");class w{static get ANY(){return I}constructor(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof w){if(e.loose===!!t.loose)return e;e=e.value}u("comparator",e,t),this.options=t,this.loose=!!t.loose,this.parse(e),this.value=this.semver===I?"":this.operator+this.semver.version,u("comp",this)}parse(e){const t=e.match(this.options.loose?A[R.COMPARATORLOOSE]:A[R.COMPARATOR]);if(!t)throw new TypeError(`Invalid comparator: ${e}`);this.operator=void 0!==t[1]?t[1]:"","="===this.operator&&(this.operator=""),this.semver=t[2]?new _(t[2],this.options.loose):I}toString(){return this.value}test(e){if(u("Comparator.test",e,this.options.loose),this.semver===I||e===I)return!0;if("string"==typeof e)try{e=new _(e,this.options)}catch(e){return!1}return b(e,this.operator,this.semver,this.options)}intersects(e,t){if(!(e instanceof w))throw new TypeError("a Comparator is required");if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),""===this.operator)return""===this.value||new S(e.value,t).test(this.value);if(""===e.operator)return""===e.value||new S(this.value,t).test(e.semver);const r=!(">="!==this.operator&&">"!==this.operator||">="!==e.operator&&">"!==e.operator),n=!("<="!==this.operator&&"<"!==this.operator||"<="!==e.operator&&"<"!==e.operator),o=this.semver.version===e.semver.version,i=!(">="!==this.operator&&"<="!==this.operator||">="!==e.operator&&"<="!==e.operator),s=b(this.semver,"<",e.semver,t)&&(">="===this.operator||">"===this.operator)&&("<="===e.operator||"<"===e.operator),a=b(this.semver,">",e.semver,t)&&("<="===this.operator||"<"===this.operator)&&(">="===e.operator||">"===e.operator);return r||n||o&&i||s||a}}const{re:A,t:R}=l;class S{constructor(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof S)return e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease?e:new S(e.raw,t);if(e instanceof w)return this.raw=e.value,this.set=[[e]],this.format(),this;if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=e,this.set=e.split(/\s*\|\|\s*/).map((e=>this.parseRange(e.trim()))).filter((e=>e.length)),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${e}`);this.format()}format(){return this.range=this.set.map((e=>e.join(" ").trim())).join("||").trim(),this.range}toString(){return this.range}parseRange(e){const{loose:t}=this.options;e=(e=e.trim()).replace(t?N[O.HYPHENRANGELOOSE]:N[O.HYPHENRANGE],H(this.options.includePrerelease)),u("hyphen replace",e),e=e.replace(N[O.COMPARATORTRIM],L),u("comparator trim",e,N[O.COMPARATORTRIM]),e=(e=(e=e.replace(N[O.TILDETRIM],T)).replace(N[O.CARETTRIM],$)).split(/\s+/).join(" ");const r=t?N[O.COMPARATORLOOSE]:N[O.COMPARATOR];return e.split(" ").map((e=>C(e,this.options))).join(" ").split(/\s+/).map((e=>G(e,this.options))).filter(this.options.loose?e=>!!e.match(r):()=>!0).map((e=>new w(e,this.options)))}intersects(e,t){if(!(e instanceof S))throw new TypeError("a Range is required");return this.set.some((r=>M(r,t)&&e.set.some((e=>M(e,t)&&r.every((r=>e.every((e=>r.intersects(e,t)))))))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new _(e,this.options)}catch(e){return!1}for(let t=0;t<this.set.length;t++)if(q(this.set[t],e,this.options))return!0;return!1}}const{re:N,t:O,comparatorTrimReplace:L,tildeTrimReplace:T,caretTrimReplace:$}=l,M=(e,t)=>{let r=!0;const n=e.slice();let o=n.pop();for(;r&&n.length;)r=n.every((e=>o.intersects(e,t))),o=n.pop();return r},C=(e,t)=>(u("comp",e,t),e=D(e,t),u("caret",e),e=P(e,t),u("tildes",e),e=U(e,t),u("xrange",e),e=F(e,t),u("stars",e),e),x=e=>!e||"x"===e.toLowerCase()||"*"===e,P=(e,t)=>e.trim().split(/\s+/).map((e=>j(e,t))).join(" "),j=(e,t)=>e.replace(t.loose?N[O.TILDELOOSE]:N[O.TILDE],((t,r,n,o,i)=>{let s;return u("tilde",e,t,r,n,o,i),x(r)?s="":x(n)?s=`>=${r}.0.0 <${+r+1}.0.0-0`:x(o)?s=`>=${r}.${n}.0 <${r}.${+n+1}.0-0`:i?(u("replaceTilde pr",i),s=`>=${r}.${n}.${o}-${i} <${r}.${+n+1}.0-0`):s=`>=${r}.${n}.${o} <${r}.${+n+1}.0-0`,u("tilde return",s),s})),D=(e,t)=>e.trim().split(/\s+/).map((e=>k(e,t))).join(" "),k=(e,t)=>{u("caret",e,t);const r=t.includePrerelease?"-0":"";return e.replace(t.loose?N[O.CARETLOOSE]:N[O.CARET],((t,n,o,i,s)=>{let a;return u("caret",e,t,n,o,i,s),x(n)?a="":x(o)?a=`>=${n}.0.0${r} <${+n+1}.0.0-0`:x(i)?a="0"===n?`>=${n}.${o}.0${r} <${n}.${+o+1}.0-0`:`>=${n}.${o}.0${r} <${+n+1}.0.0-0`:s?(u("replaceCaret pr",s),a="0"===n?"0"===o?`>=${n}.${o}.${i}-${s} <${n}.${o}.${+i+1}-0`:`>=${n}.${o}.${i}-${s} <${n}.${+o+1}.0-0`:`>=${n}.${o}.${i}-${s} <${+n+1}.0.0-0`):(u("no pr"),a="0"===n?"0"===o?`>=${n}.${o}.${i}${r} <${n}.${o}.${+i+1}-0`:`>=${n}.${o}.${i}${r} <${n}.${+o+1}.0-0`:`>=${n}.${o}.${i} <${+n+1}.0.0-0`),u("caret return",a),a}))},U=(e,t)=>(u("replaceXRanges",e,t),e.split(/\s+/).map((e=>B(e,t))).join(" ")),B=(e,t)=>(e=e.trim()).replace(t.loose?N[O.XRANGELOOSE]:N[O.XRANGE],((r,n,o,i,s,a)=>{u("xRange",e,r,n,o,i,s,a);const c=x(o),l=c||x(i),d=l||x(s);return"="===n&&d&&(n=""),a=t.includePrerelease?"-0":"",c?r=">"===n||"<"===n?"<0.0.0-0":"*":n&&d?(l&&(i=0),s=0,">"===n?(n=">=",l?(o=+o+1,i=0,s=0):(i=+i+1,s=0)):"<="===n&&(n="<",l?o=+o+1:i=+i+1),"<"===n&&(a="-0"),r=`${n+o}.${i}.${s}${a}`):l?r=`>=${o}.0.0${a} <${+o+1}.0.0-0`:d&&(r=`>=${o}.${i}.0${a} <${o}.${+i+1}.0-0`),u("xRange return",r),r})),F=(e,t)=>(u("replaceStars",e,t),e.trim().replace(N[O.STAR],"")),G=(e,t)=>(u("replaceGTE0",e,t),e.trim().replace(N[t.includePrerelease?O.GTE0PRE:O.GTE0],"")),H=e=>(t,r,n,o,i,s,a,c,u,l,d,f,h)=>`${r=x(n)?"":x(o)?`>=${n}.0.0${e?"-0":""}`:x(i)?`>=${n}.${o}.0${e?"-0":""}`:s?`>=${r}`:`>=${r}${e?"-0":""}`} ${c=x(u)?"":x(l)?`<${+u+1}.0.0-0`:x(d)?`<${u}.${+l+1}.0-0`:f?`<=${u}.${l}.${d}-${f}`:e?`<${u}.${l}.${+d+1}-0`:`<=${c}`}`.trim(),q=(e,t,r)=>{for(let r=0;r<e.length;r++)if(!e[r].test(t))return!1;if(t.prerelease.length&&!r.includePrerelease){for(let r=0;r<e.length;r++)if(u(e[r].semver),e[r].semver!==w.ANY&&e[r].semver.prerelease.length>0){const n=e[r].semver;if(n.major===t.major&&n.minor===t.minor&&n.patch===t.patch)return!0}return!1}return!0},{MAX_LENGTH:z}=c,{re:W,t:X}=l,{re:K,t:V}=l;function Y(e){return String.fromCharCode(parseInt(e.slice(1),16))}function J(e){return`%${`00${e.charCodeAt(0).toString(16)}`.slice(-2)}`}function Q(e){return t=JSON.stringify(e),btoa(encodeURIComponent(t).replace(/%[0-9A-F]{2}/g,Y));var t}function Z(e){return JSON.parse(decodeURIComponent(Array.from(atob(e),J).join("")))}function ee(e){return void 0===e}function te(e){return function(e){return null===e}(e)||ee(e)}function re(e){if(!e)return!0;for(const t in e)if(Object.hasOwnProperty.call(e,t))return!1;return!0}const ne={},oe={"magic-sdk":"magic-sdk","@magic-sdk/react-native":"magic-sdk-rn"};class ie extends Error{constructor(e,t){super(`Magic SDK Error: [${e}] ${t}`),this.code=void 0,this.rawMessage=void 0,this.__proto__=Error,this.code=e,this.rawMessage=t,Object.setPrototypeOf(this,ie.prototype)}}class se extends Error{constructor(e){super(),this.__proto__=Error,this.code=void 0,this.rawMessage=void 0;const t=Number(null==e?void 0:e.code);this.rawMessage=(null==e?void 0:e.message)||"Internal error",this.code=function(e){return!te(e)&&"number"==typeof e&&Object.values(r).includes(e)}(t)?t:r.InternalError,this.message=`Magic RPC Error: [${this.code}] ${this.rawMessage}`,Object.setPrototypeOf(this,se.prototype)}}class ae{constructor(e,t){this.code=void 0,this.rawMessage=void 0,this.message=void 0,this.code=e,this.rawMessage=t,this.message=`Magic SDK Warning: [${e}] ${t}`}log(){console.warn(this.message)}}class ce extends Error{constructor(e,t,r,n){super(`Magic Extension Error (${e.name}): [${t}] ${r}`),this.code=void 0,this.rawMessage=void 0,this.data=void 0,this.__proto__=Error,this.code=t,this.rawMessage=r,this.data=n,Object.setPrototypeOf(this,ce.prototype)}}class ue{constructor(e,t,r){this.code=void 0,this.rawMessage=void 0,this.message=void 0,this.code=t,this.rawMessage=r,this.message=`Magic Extension Warning (${e.name}): [${t}] ${r}`}log(){console.warn(this.message)}}const le=function*(){let e=0;for(;;)e<Number.MAX_SAFE_INTEGER?yield++e:e=0}();function de(){return le.next().value}const fe=Symbol("Payload pre-processed by Magic SDK");function he(e){return Object.defineProperty(e,fe,{value:!0,enumerable:!1}),e}function pe(e){var t,r,n;return function(e){return!!e[fe]}(e)||(e.jsonrpc=null!=(t=e.jsonrpc)?t:"2.0",e.id=de(),e.method=null!=(r=e.method)?r:"noop",e.params=null!=(n=e.params)?n:[],he(e)),e}function ve(e,t=[]){return he({params:t,method:e,jsonrpc:"2.0",id:de()})}class me{constructor(e){this._jsonrpc=void 0,this._id=void 0,this._result=void 0,this._error=void 0,e instanceof me?(this._jsonrpc=e.payload.jsonrpc,this._id=e.payload.id,this._result=e.payload.result,this._error=e.payload.error):function(e){return!te(e)&&!(ee(e.jsonrpc)||ee(e.id)||ee(e.result)&&ee(e.error))}(e)?(this._jsonrpc=e.jsonrpc,this._id=e.id,this._result=e.result,this._error=e.error):(this._jsonrpc=e.jsonrpc,this._id=e.id,this._result=void 0,this._error=void 0)}applyError(e){return this._error=e,this}applyResult(e){return this._result=e,this}get hasError(){return null!=this._error}get hasResult(){return void 0!==this._result}get payload(){return{jsonrpc:this._jsonrpc,id:this._id,result:this._result,error:this._error}}}var ye,ge=(function(e){var t=Object.prototype.hasOwnProperty,r="~";function n(){}function o(e,t,r){this.fn=e,this.context=t,this.once=r||!1}function i(e,t,n,i,s){if("function"!=typeof n)throw new TypeError("The listener must be a function");var a=new o(n,i||e,s),c=r?r+t:t;return e._events[c]?e._events[c].fn?e._events[c]=[e._events[c],a]:e._events[c].push(a):(e._events[c]=a,e._eventsCount++),e}function s(e,t){0==--e._eventsCount?e._events=new n:delete e._events[t]}function a(){this._events=new n,this._eventsCount=0}Object.create&&(n.prototype=Object.create(null),(new n).__proto__||(r=!1)),a.prototype.eventNames=function(){var e,n,o=[];if(0===this._eventsCount)return o;for(n in e=this._events)t.call(e,n)&&o.push(r?n.slice(1):n);return Object.getOwnPropertySymbols?o.concat(Object.getOwnPropertySymbols(e)):o},a.prototype.listeners=function(e){var t=this._events[r?r+e:e];if(!t)return[];if(t.fn)return[t.fn];for(var n=0,o=t.length,i=new Array(o);n<o;n++)i[n]=t[n].fn;return i},a.prototype.listenerCount=function(e){var t=this._events[r?r+e:e];return t?t.fn?1:t.length:0},a.prototype.emit=function(e,t,n,o,i,s){var a=r?r+e:e;if(!this._events[a])return!1;var c,u,l=this._events[a],d=arguments.length;if(l.fn){switch(l.once&&this.removeListener(e,l.fn,void 0,!0),d){case 1:return l.fn.call(l.context),!0;case 2:return l.fn.call(l.context,t),!0;case 3:return l.fn.call(l.context,t,n),!0;case 4:return l.fn.call(l.context,t,n,o),!0;case 5:return l.fn.call(l.context,t,n,o,i),!0;case 6:return l.fn.call(l.context,t,n,o,i,s),!0}for(u=1,c=new Array(d-1);u<d;u++)c[u-1]=arguments[u];l.fn.apply(l.context,c)}else{var f,h=l.length;for(u=0;u<h;u++)switch(l[u].once&&this.removeListener(e,l[u].fn,void 0,!0),d){case 1:l[u].fn.call(l[u].context);break;case 2:l[u].fn.call(l[u].context,t);break;case 3:l[u].fn.call(l[u].context,t,n);break;case 4:l[u].fn.call(l[u].context,t,n,o);break;default:if(!c)for(f=1,c=new Array(d-1);f<d;f++)c[f-1]=arguments[f];l[u].fn.apply(l[u].context,c)}}return!0},a.prototype.on=function(e,t,r){return i(this,e,t,r,!1)},a.prototype.once=function(e,t,r){return i(this,e,t,r,!0)},a.prototype.removeListener=function(e,t,n,o){var i=r?r+e:e;if(!this._events[i])return this;if(!t)return s(this,i),this;var a=this._events[i];if(a.fn)a.fn!==t||o&&!a.once||n&&a.context!==n||s(this,i);else{for(var c=0,u=[],l=a.length;c<l;c++)(a[c].fn!==t||o&&!a[c].once||n&&a[c].context!==n)&&u.push(a[c]);u.length?this._events[i]=1===u.length?u[0]:u:s(this,i)}return this},a.prototype.removeAllListeners=function(e){var t;return e?this._events[t=r?r+e:e]&&s(this,t):(this._events=new n,this._eventsCount=0),this},a.prototype.off=a.prototype.removeListener,a.prototype.addListener=a.prototype.on,a.prefixed=r,a.EventEmitter=a,e.exports=a}(ye={exports:{}}),ye.exports);class _e extends ge{}function Ee(){const e=new _e;return{emitter:e,createChainingEmitterMethod:(t,r)=>(...n)=>(e[t].apply(e,n),r),createBoundEmitterMethod:t=>(...r)=>e[t].apply(e,r)}}const be=Symbol("isPromiEvent");function Ie(e){return!!e[be]}function we(e){const t=Ae(e),{createBoundEmitterMethod:r,createChainingEmitterMethod:n}=Ee(),o=Symbol("Promise.then"),i=Symbol("Promise.catch"),s=Symbol("Promise.finally"),a=(e,t)=>(...r)=>{const n=t[e].apply(t,r);return c(n)},c=e=>Object.assign(e,{[be]:!0,[o]:e[o]||e.then,[i]:e[i]||e.catch,[s]:e[s]||e.finally,then:a(o,e),catch:a(i,e),finally:a(s,e),on:n("on",e),once:n("once",e),addListener:n("addListener",e),off:n("off",e),removeListener:n("removeListener",e),removeAllListeners:n("removeAllListeners",e),emit:r("emit"),eventNames:r("eventNames"),listeners:r("listeners"),listenerCount:r("listenerCount")}),u=c(t.then((e=>(u.emit("done",e),u.emit("settled"),e)),(e=>{throw u.emit("error",e),u.emit("settled"),e})));return u}function Ae(e){return new Promise(((t,r)=>{const n=e(t,r);Promise.resolve(n).catch(r)}))}class Re{constructor(e){this.sdk=void 0,this.sdk=e}get overlay(){return this.sdk.overlay}request(t){const r=this.overlay.post(i.MAGIC_HANDLE_REQUEST,pe(t)),n=we(((t,n)=>{r.then((r=>{if(s(),r.hasError)n(new se(r.payload.error));else{if(!r.hasResult)throw new ie(e.MalformedResponse,"Response from the Magic iframe is malformed.");t(r.payload.result)}})).catch((e=>{s(),n(e)}))})),s=this.overlay.on(o.MAGIC_HANDLE_EVENT,(e=>{var r;const{response:o}=e.data;if(o.id===t.id&&null!=(r=o.result)&&r.event){const{event:e,params:t=[]}=o.result;n.emit(e,...t)}}));return n}}class Se extends Re{loginWithMagicLink(e){const{email:t,showUI:r=!0,redirectURI:o}=e,i=ve(this.sdk.testMode?n.LoginWithMagicLinkTestMode:n.LoginWithMagicLink,[{email:t,showUI:r,redirectURI:o}]);return this.request(i)}loginWithSMS(e){const{phoneNumber:t}=e,r=ve(this.sdk.testMode?n.LoginWithSmsTestMode:n.LoginWithSms,[{phoneNumber:t,showUI:!0}]);return this.request(r)}loginWithCredential(e){let t=null!=e?e:"";if(!e&&"web"===ne.platform){t=window.location.search;const e=window.location.origin+window.location.pathname;window.history.replaceState(null,"",e)}const r=ve(this.sdk.testMode?n.LoginWithCredentialTestMode:n.LoginWithCredential,[t]);return this.request(r)}}let Ne;function Oe(e){return async(...t)=>(Ne||(Ne=await ne.configureStorage()),await Ne.ready(),Ne[e](...t))}const Le=Oe("getItem"),Te=Oe("setItem"),$e=Oe("removeItem"),Me=Oe("clear"),Ce=Oe("length"),xe=Oe("key"),Pe=Oe("keys"),je=Oe("iterate");var De={__proto__:null,getItem:Le,setItem:Te,removeItem:$e,clear:Me,length:Ce,key:xe,keys:Pe,iterate:je};function ke(){const e=window.crypto.getRandomValues(new Uint8Array(16));e[6]=15&e[6]|64,e[8]=191&e[8]|128;let t="";return t+=e[0].toString(16),t+=e[1].toString(16),t+=e[2].toString(16),t+=e[3].toString(16),t+="-",t+=e[4].toString(16),t+=e[5].toString(16),t+="-",t+=e[6].toString(16),t+=e[7].toString(16),t+="-",t+=e[8].toString(16),t+=e[9].toString(16),t+="-",t+=e[10].toString(16),t+=e[11].toString(16),t+=e[12].toString(16),t+=e[13].toString(16),t+=e[14].toString(16),t+=e[15].toString(16),t}const Ue={name:"ECDSA",namedCurve:"P-256"},Be={name:"ECDSA",namedCurve:"P-256"};function Fe(e){return Ge(function(e){return encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,((e,t)=>String.fromCharCode(parseInt(t,16))))}(e))}function Ge(e){return btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+/g,"")}class He extends Re{getIdToken(e){const t=ve(this.sdk.testMode?n.GetIdTokenTestMode:n.GetIdToken,[e]);return this.request(t)}generateIdToken(e){const t=ve(this.sdk.testMode?n.GenerateIdTokenTestMode:n.GenerateIdToken,[e]);return this.request(t)}getMetadata(){const e=ve(this.sdk.testMode?n.GetMetadataTestMode:n.GetMetadata);return this.request(e)}updateEmail(e){const{email:t,showUI:r=!0}=e,o=ve(this.sdk.testMode?n.UpdateEmailTestMode:n.UpdateEmail,[{email:t,showUI:r}]);return this.request(o)}isLoggedIn(){const e=ve(this.sdk.testMode?n.IsLoggedInTestMode:n.IsLoggedIn);return this.request(e)}logout(){$e("STORE_KEY_PUBLIC_JWK"),$e("STORE_KEY_PRIVATE_KEY");const e=ve(this.sdk.testMode?n.LogoutTestMode:n.Logout);return this.request(e)}showSettings(){const e=ve(this.sdk.testMode?n.UserSettingsTestMode:n.UserSettings);return this.request(e)}}function qe(){return(qe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const{createBoundEmitterMethod:ze,createChainingEmitterMethod:We}=Ee();class Xe extends Re{constructor(...e){super(...e),this.isMagic=!0,this.on=We("on",this),this.once=We("once",this),this.addListener=We("addListener",this),this.off=We("off",this),this.removeListener=We("removeListener",this),this.removeAllListeners=We("removeAllListeners",this),this.emit=ze("emit"),this.eventNames=ze("eventNames"),this.listeners=ze("listeners"),this.listenerCount=ze("listenerCount")}sendAsync(t,r){if(!r)throw function(t){return new ie(e.InvalidArgument,`Invalid ${(e=>{const t=e+1,r=t%10,n=t%100;return 1===r&&11!==n?`${t}st`:2===r&&12!==n?`${t}nd`:3===r&&13!==n?`${t}rd`:`${t}th`})(t.argument)} argument given to \`${t.procedure}\`.\n  Expected: \`${t.expected}\`\n  Received: \`${t.received}\``)}({procedure:"Magic.rpcProvider.sendAsync",argument:1,expected:"function",received:null===r?"null":typeof r});if(Array.isArray(t))this.overlay.post(i.MAGIC_HANDLE_REQUEST,t.map((e=>{const t=pe(e);return this.prefixPayloadMethodForTestMode(t),t}))).then((e=>{r(null,e.map((e=>qe({},e.payload,{error:e.hasError?new se(e.payload.error):null}))))}));else{const e=pe(t);this.prefixPayloadMethodForTestMode(e),this.overlay.post(i.MAGIC_HANDLE_REQUEST,e).then((e=>{r(e.hasError?new se(e.payload.error):null,e.payload)}))}}send(e,r){if("string"==typeof e){const t=ve(e,Array.isArray(r)?r:[]);return this.request(t)}if(Array.isArray(e)||r)return void this.sendAsync(e,r);const n=new ae(t.SyncWeb3Method,"Non-async web3 methods are deprecated in web3 > 1.0 and are not supported by the Magic web3 provider. Please use an async method instead.");return n.log(),new me(e).applyError({code:-32603,message:n.rawMessage}).payload}enable(){const e=ve("eth_accounts");return this.request(e)}request(e){return this.prefixPayloadMethodForTestMode(e),super.request(e)}prefixPayloadMethodForTestMode(e){this.sdk.testMode&&(e.method=`testMode/eth/${e.method}`)}}function Ke(e,t){return t?new URL(e,t):new URL(e)}const Ve=["request","overlay","sdk"];function Ye(e){let t=Object.getPrototypeOf(e);const r=[t];for(;t!==Re.prototype;)t=Object.getPrototypeOf(t),r.push(t);return r}class Je extends Re{constructor(){super(void 0),this.__sdk_access_field_descriptors__=new Map,this.__is_initialized__=!1,this.utils={createPromiEvent:we,isPromiEvent:Ie,encodeJSON:Q,decodeJSON:Z,createJsonRpcRequestPayload:ve,standardizeJsonRpcRequestPayload:pe,storage:De};const t=[this,...Ye(this)];Ve.forEach((r=>{const n=t.map((e=>Object.getOwnPropertyDescriptor(e,r))),o=n.findIndex((e=>!!e)),i=n[o];i&&(this.__sdk_access_field_descriptors__.set(r,{descriptor:i,isPrototypeField:o>0}),Object.defineProperty(this,r,{configurable:!0,get:()=>{throw function(t){return new ie(e.ExtensionNotInitialized,`Extensions must be initialized with a Magic SDK instance before \`Extension.${t}\` can be accessed. Do not invoke \`Extension.${t}\` inside an extension constructor.`)}(r)}}))}))}init(e){this.__is_initialized__||(Ve.forEach((e=>{if(this.__sdk_access_field_descriptors__.has(e)){const{descriptor:t,isPrototypeField:r}=this.__sdk_access_field_descriptors__.get(e);r?delete this[e]:Object.defineProperty(this,e,t)}})),this.sdk=e,this.__is_initialized__=!0)}createDeprecationWarning(e){const{method:t,removalVersion:r,useInstead:n}=e;return new ue(this,"DEPRECATION_NOTICE",`\`${t}\` will be removed from this Extension in version \`${r}\`.${n?` Use \`${n}\` instead.`:""}`)}createWarning(e,t){return new ue(this,e,t)}createError(e,t,r){return new ce(this,e,t,r)}}class Qe extends Je{}function Ze(e){return!e.compat||null==e.compat[ne.sdkName]||("string"==typeof e.compat[ne.sdkName]?((e,t,r)=>{try{t=new S(t,void 0)}catch(e){return!1}return t.test(e)})(((e,t)=>{if(e instanceof _)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let r=null;if((t=t||{}).rtl){let t;for(;(t=K[V.COERCERTL].exec(e))&&(!r||r.index+r[0].length!==e.length);)r&&t.index+t[0].length===r.index+r[0].length||(r=t),K[V.COERCERTL].lastIndex=t.index+t[1].length+t[2].length;K[V.COERCERTL].lastIndex=-1}else r=e.match(K[V.COERCE]);return null===r?null:((e,t)=>{if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof _)return e;if("string"!=typeof e)return null;if(e.length>z)return null;if(!(t.loose?W[X.LOOSE]:W[X.FULL]).test(e))return null;try{return new _(e,t)}catch(e){return null}})(`${r[2]}.${r[3]||"0"}.${r[4]||"0"}`,t)})(ne.version),e.compat[ne.sdkName]):!!e.compat[ne.sdkName])}function et(t){var r;const n=null!=(r=null==t?void 0:t.extensions)?r:[],o={},i=[];if(Array.isArray(n)?n.forEach((e=>{Ze(e)?(e.init(this),(e.name||e.name!==Qe.Anonymous)&&(this[e.name]=e),e instanceof Qe.Internal&&(re(e.config)||(o[e.name]=e.config))):i.push(e)})):Object.keys(n).forEach((e=>{if(Ze(n[e])){n[e].init(this);const t=n[e];this[e]=t,t instanceof Qe.Internal&&(re(t.config)||(o[n[e].name]=t.config))}else i.push(n[e])})),i.length)throw function(t){let r=`Some extensions are incompatible with \`${ne.sdkName}@${ne.version}\`:`;return t.filter((e=>null!=e.compat)).forEach((e=>{const t=e.compat[ne.sdkName];"string"==typeof t?r+=`\n  - Extension \`${e.name}\` supports version(s) \`${t}\``:t||(r+=`\n  - Extension \`${e.name}\` does not support ${ne.platform} environments.`)})),new ie(e.IncompatibleExtensions,r)}(i);return o}Qe.Internal=class extends Je{},Qe.Anonymous="anonymous extension";class tt{constructor(r,n){var o;if(this.apiKey=void 0,this.endpoint=void 0,this.parameters=void 0,this.testMode=void 0,this.auth=void 0,this.user=void 0,this.rpcProvider=void 0,this.apiKey=r,!r)throw new ie(e.MissingApiKey,"Please provide an API key that you acquired from the Magic developer dashboard.");"react-native"===ne.platform&&null!=n&&n.endpoint&&new ae(t.ReactNativeEndpointConfiguration,`CUSTOM DOMAINS ARE NOT SUPPORTED WHEN USING MAGIC SDK WITH REACT NATIVE! The \`endpoint\` parameter SHOULD NOT be provided. The Magic \`<iframe>\` is automatically wrapped by a WebView pointed at \`${ne.defaultEndpoint}\`. Changing this default behavior will lead to unexpected results and potentially security-threatening bugs.`).log();const{defaultEndpoint:i,version:s}=ne;this.testMode=!(null==n||!n.testMode),this.endpoint=Ke(null!=(o=null==n?void 0:n.endpoint)?o:i).origin,this.auth=new Se(this),this.user=new He(this),this.rpcProvider=new Xe(this);const a=et.call(this,n);this.parameters=Q({API_KEY:this.apiKey,DOMAIN_ORIGIN:window.location?window.location.origin:"",ETH_NETWORK:null==n?void 0:n.network,host:Ke(this.endpoint).host,sdk:oe[ne.sdkName],version:s,ext:re(a)?void 0:a,locale:(null==n?void 0:n.locale)||"en_US"})}get overlay(){if(!tt.__overlays__.has(this.parameters)){const e=new ne.ViewController(this.endpoint,this.parameters);e.init(),tt.__overlays__.set(this.parameters,e)}return tt.__overlays__.get(this.parameters)}async preload(){await this.overlay.ready}}tt.__overlays__=new Map;var rt="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function nt(e){var t={exports:{}};return e(t,t.exports),t.exports}function ot(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets option of @rollup/plugin-commonjs appropriately for this require call to behave properly.')}var it=nt((function(e,t){e.exports=function e(t,r,n){function o(s,a){if(!r[s]){if(!t[s]){if(!a&&ot)return ot(s);if(i)return i(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var u=r[s]={exports:{}};t[s][0].call(u.exports,(function(e){return o(t[s][1][e]||e)}),u,u.exports,e,t,r,n)}return r[s].exports}for(var i=ot,s=0;s<n.length;s++)o(n[s]);return o}({1:[function(e,t,r){(function(e){var r,n,o=e.MutationObserver||e.WebKitMutationObserver;if(o){var i=0,s=new o(l),a=e.document.createTextNode("");s.observe(a,{characterData:!0}),r=function(){a.data=i=++i%2}}else if(e.setImmediate||void 0===e.MessageChannel)r="document"in e&&"onreadystatechange"in e.document.createElement("script")?function(){var t=e.document.createElement("script");t.onreadystatechange=function(){l(),t.onreadystatechange=null,t.parentNode.removeChild(t),t=null},e.document.documentElement.appendChild(t)}:function(){setTimeout(l,0)};else{var c=new e.MessageChannel;c.port1.onmessage=l,r=function(){c.port2.postMessage(0)}}var u=[];function l(){var e,t;n=!0;for(var r=u.length;r;){for(t=u,u=[],e=-1;++e<r;)t[e]();r=u.length}n=!1}t.exports=function(e){1!==u.push(e)||n||r()}}).call(this,void 0!==rt?rt:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(e,t,r){var n=e(1);function o(){}var i={},s=["REJECTED"],a=["FULFILLED"],c=["PENDING"];function u(e){if("function"!=typeof e)throw new TypeError("resolver must be a function");this.state=c,this.queue=[],this.outcome=void 0,e!==o&&h(this,e)}function l(e,t,r){this.promise=e,"function"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),"function"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function d(e,t,r){n((function(){var n;try{n=t(r)}catch(t){return i.reject(e,t)}n===e?i.reject(e,new TypeError("Cannot resolve promise with itself")):i.resolve(e,n)}))}function f(e){var t=e&&e.then;if(e&&("object"==typeof e||"function"==typeof e)&&"function"==typeof t)return function(){t.apply(e,arguments)}}function h(e,t){var r=!1;function n(t){r||(r=!0,i.reject(e,t))}function o(t){r||(r=!0,i.resolve(e,t))}var s=p((function(){t(o,n)}));"error"===s.status&&n(s.value)}function p(e,t){var r={};try{r.value=e(t),r.status="success"}catch(e){r.status="error",r.value=e}return r}t.exports=u,u.prototype.catch=function(e){return this.then(null,e)},u.prototype.then=function(e,t){if("function"!=typeof e&&this.state===a||"function"!=typeof t&&this.state===s)return this;var r=new this.constructor(o);return this.state!==c?d(r,this.state===a?e:t,this.outcome):this.queue.push(new l(r,e,t)),r},l.prototype.callFulfilled=function(e){i.resolve(this.promise,e)},l.prototype.otherCallFulfilled=function(e){d(this.promise,this.onFulfilled,e)},l.prototype.callRejected=function(e){i.reject(this.promise,e)},l.prototype.otherCallRejected=function(e){d(this.promise,this.onRejected,e)},i.resolve=function(e,t){var r=p(f,t);if("error"===r.status)return i.reject(e,r.value);var n=r.value;if(n)h(e,n);else{e.state=a,e.outcome=t;for(var o=-1,s=e.queue.length;++o<s;)e.queue[o].callFulfilled(t)}return e},i.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},u.resolve=function(e){return e instanceof this?e:i.resolve(new this(o),e)},u.reject=function(e){var t=new this(o);return i.reject(t,e)},u.all=function(e){var t=this;if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(new TypeError("must be an array"));var r=e.length,n=!1;if(!r)return this.resolve([]);for(var s=new Array(r),a=0,c=-1,u=new this(o);++c<r;)l(e[c],c);return u;function l(e,o){t.resolve(e).then((function(e){s[o]=e,++a!==r||n||(n=!0,i.resolve(u,s))}),(function(e){n||(n=!0,i.reject(u,e))}))}},u.race=function(e){if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(new TypeError("must be an array"));var t=e.length,r=!1;if(!t)return this.resolve([]);for(var n=-1,s=new this(o);++n<t;)this.resolve(e[n]).then((function(e){r||(r=!0,i.resolve(s,e))}),(function(e){r||(r=!0,i.reject(s,e))}));return s}},{1:1}],3:[function(e,t,r){(function(t){"function"!=typeof t.Promise&&(t.Promise=e(2))}).call(this,void 0!==rt?rt:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{2:2}],4:[function(e,t,r){var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){try{if("undefined"!=typeof indexedDB)return indexedDB;if("undefined"!=typeof webkitIndexedDB)return webkitIndexedDB;if("undefined"!=typeof mozIndexedDB)return mozIndexedDB;if("undefined"!=typeof OIndexedDB)return OIndexedDB;if("undefined"!=typeof msIndexedDB)return msIndexedDB}catch(e){return}}();function i(e,t){e=e||[],t=t||{};try{return new Blob(e,t)}catch(o){if("TypeError"!==o.name)throw o;for(var r=new("undefined"!=typeof BlobBuilder?BlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder),n=0;n<e.length;n+=1)r.append(e[n]);return r.getBlob(t.type)}}"undefined"==typeof Promise&&e(3);var s=Promise;function a(e,t){t&&e.then((function(e){t(null,e)}),(function(e){t(e)}))}function c(e,t,r){"function"==typeof t&&e.then(t),"function"==typeof r&&e.catch(r)}function u(e){return"string"!=typeof e&&(console.warn(e+" used as a key, but it is not a string."),e=String(e)),e}function l(){if(arguments.length&&"function"==typeof arguments[arguments.length-1])return arguments[arguments.length-1]}var d="local-forage-detect-blob-support",f=void 0,h={},p=Object.prototype.toString,v="readonly",m="readwrite";function y(e){for(var t=e.length,r=new ArrayBuffer(t),n=new Uint8Array(r),o=0;o<t;o++)n[o]=e.charCodeAt(o);return r}function g(e){var t=h[e.name],r={};r.promise=new s((function(e,t){r.resolve=e,r.reject=t})),t.deferredOperations.push(r),t.dbReady=t.dbReady?t.dbReady.then((function(){return r.promise})):r.promise}function _(e){var t=h[e.name].deferredOperations.pop();if(t)return t.resolve(),t.promise}function E(e,t){var r=h[e.name].deferredOperations.pop();if(r)return r.reject(t),r.promise}function b(e,t){return new s((function(r,n){if(h[e.name]=h[e.name]||{forages:[],db:null,dbReady:null,deferredOperations:[]},e.db){if(!t)return r(e.db);g(e),e.db.close()}var i=[e.name];t&&i.push(e.version);var s=o.open.apply(o,i);t&&(s.onupgradeneeded=function(t){var r=s.result;try{r.createObjectStore(e.storeName),t.oldVersion<=1&&r.createObjectStore(d)}catch(r){if("ConstraintError"!==r.name)throw r;console.warn('The database "'+e.name+'" has been upgraded from version '+t.oldVersion+" to version "+t.newVersion+', but the storage "'+e.storeName+'" already exists.')}}),s.onerror=function(e){e.preventDefault(),n(s.error)},s.onsuccess=function(){r(s.result),_(e)}}))}function I(e){return b(e,!1)}function w(e){return b(e,!0)}function A(e,t){if(!e.db)return!0;var r=!e.db.objectStoreNames.contains(e.storeName),n=e.version>e.db.version;if(e.version<e.db.version&&(e.version!==t&&console.warn('The database "'+e.name+"\" can't be downgraded from version "+e.db.version+" to version "+e.version+"."),e.version=e.db.version),n||r){if(r){var o=e.db.version+1;o>e.version&&(e.version=o)}return!0}return!1}function R(e){return i([y(atob(e.data))],{type:e.type})}function S(e){return e&&e.__local_forage_encoded_blob}function N(e){var t=this,r=t._initReady().then((function(){var e=h[t._dbInfo.name];if(e&&e.dbReady)return e.dbReady}));return c(r,e,e),r}function O(e,t,r,n){void 0===n&&(n=1);try{var o=e.db.transaction(e.storeName,t);r(null,o)}catch(o){if(n>0&&(!e.db||"InvalidStateError"===o.name||"NotFoundError"===o.name))return s.resolve().then((function(){if(!e.db||"NotFoundError"===o.name&&!e.db.objectStoreNames.contains(e.storeName)&&e.version<=e.db.version)return e.db&&(e.version=e.db.version+1),w(e)})).then((function(){return function(e){g(e);for(var t=h[e.name],r=t.forages,n=0;n<r.length;n++){var o=r[n];o._dbInfo.db&&(o._dbInfo.db.close(),o._dbInfo.db=null)}return e.db=null,I(e).then((function(t){return e.db=t,A(e)?w(e):t})).then((function(n){e.db=t.db=n;for(var o=0;o<r.length;o++)r[o]._dbInfo.db=n})).catch((function(t){throw E(e,t),t}))}(e).then((function(){O(e,t,r,n-1)}))})).catch(r);r(o)}}var L={_driver:"asyncStorage",_initStorage:function(e){var t=this,r={db:null};if(e)for(var n in e)r[n]=e[n];var o=h[r.name];o||(h[r.name]=o={forages:[],db:null,dbReady:null,deferredOperations:[]}),o.forages.push(t),t._initReady||(t._initReady=t.ready,t.ready=N);var i=[];function a(){return s.resolve()}for(var c=0;c<o.forages.length;c++){var u=o.forages[c];u!==t&&i.push(u._initReady().catch(a))}var l=o.forages.slice(0);return s.all(i).then((function(){return r.db=o.db,I(r)})).then((function(e){return r.db=e,A(r,t._defaultConfig.version)?w(r):e})).then((function(e){r.db=o.db=e,t._dbInfo=r;for(var n=0;n<l.length;n++){var i=l[n];i!==t&&(i._dbInfo.db=r.db,i._dbInfo.version=r.version)}}))},_support:function(){try{if(!o||!o.open)return!1;var e="undefined"!=typeof openDatabase&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform),t="function"==typeof fetch&&-1!==fetch.toString().indexOf("[native code");return(!e||t)&&"undefined"!=typeof indexedDB&&"undefined"!=typeof IDBKeyRange}catch(e){return!1}}(),iterate:function(e,t){var r=this,n=new s((function(t,n){r.ready().then((function(){O(r._dbInfo,v,(function(o,i){if(o)return n(o);try{var s=i.objectStore(r._dbInfo.storeName).openCursor(),a=1;s.onsuccess=function(){var r=s.result;if(r){var n=r.value;S(n)&&(n=R(n));var o=e(n,r.key,a++);void 0!==o?t(o):r.continue()}else t()},s.onerror=function(){n(s.error)}}catch(e){n(e)}}))})).catch(n)}));return a(n,t),n},getItem:function(e,t){var r=this;e=u(e);var n=new s((function(t,n){r.ready().then((function(){O(r._dbInfo,v,(function(o,i){if(o)return n(o);try{var s=i.objectStore(r._dbInfo.storeName).get(e);s.onsuccess=function(){var e=s.result;void 0===e&&(e=null),S(e)&&(e=R(e)),t(e)},s.onerror=function(){n(s.error)}}catch(e){n(e)}}))})).catch(n)}));return a(n,t),n},setItem:function(e,t,r){var n=this;e=u(e);var o=new s((function(r,o){var a;n.ready().then((function(){return a=n._dbInfo,"[object Blob]"===p.call(t)?function(e){return"boolean"==typeof f?s.resolve(f):function(e){return new s((function(t){var r=e.transaction(d,m),n=i([""]);r.objectStore(d).put(n,"key"),r.onabort=function(e){e.preventDefault(),e.stopPropagation(),t(!1)},r.oncomplete=function(){var e=navigator.userAgent.match(/Chrome\/(\d+)/),r=navigator.userAgent.match(/Edge\//);t(r||!e||parseInt(e[1],10)>=43)}})).catch((function(){return!1}))}(e).then((function(e){return f=e}))}(a.db).then((function(e){return e?t:(r=t,new s((function(e,t){var n=new FileReader;n.onerror=t,n.onloadend=function(t){var n=btoa(t.target.result||"");e({__local_forage_encoded_blob:!0,data:n,type:r.type})},n.readAsBinaryString(r)})));var r})):t})).then((function(t){O(n._dbInfo,m,(function(i,s){if(i)return o(i);try{var a=s.objectStore(n._dbInfo.storeName);null===t&&(t=void 0);var c=a.put(t,e);s.oncomplete=function(){void 0===t&&(t=null),r(t)},s.onabort=s.onerror=function(){o(c.error?c.error:c.transaction.error)}}catch(e){o(e)}}))})).catch(o)}));return a(o,r),o},removeItem:function(e,t){var r=this;e=u(e);var n=new s((function(t,n){r.ready().then((function(){O(r._dbInfo,m,(function(o,i){if(o)return n(o);try{var s=i.objectStore(r._dbInfo.storeName).delete(e);i.oncomplete=function(){t()},i.onerror=function(){n(s.error)},i.onabort=function(){n(s.error?s.error:s.transaction.error)}}catch(e){n(e)}}))})).catch(n)}));return a(n,t),n},clear:function(e){var t=this,r=new s((function(e,r){t.ready().then((function(){O(t._dbInfo,m,(function(n,o){if(n)return r(n);try{var i=o.objectStore(t._dbInfo.storeName).clear();o.oncomplete=function(){e()},o.onabort=o.onerror=function(){r(i.error?i.error:i.transaction.error)}}catch(e){r(e)}}))})).catch(r)}));return a(r,e),r},length:function(e){var t=this,r=new s((function(e,r){t.ready().then((function(){O(t._dbInfo,v,(function(n,o){if(n)return r(n);try{var i=o.objectStore(t._dbInfo.storeName).count();i.onsuccess=function(){e(i.result)},i.onerror=function(){r(i.error)}}catch(e){r(e)}}))})).catch(r)}));return a(r,e),r},key:function(e,t){var r=this,n=new s((function(t,n){e<0?t(null):r.ready().then((function(){O(r._dbInfo,v,(function(o,i){if(o)return n(o);try{var s=i.objectStore(r._dbInfo.storeName),a=!1,c=s.openKeyCursor();c.onsuccess=function(){var r=c.result;r?0===e||a?t(r.key):(a=!0,r.advance(e)):t(null)},c.onerror=function(){n(c.error)}}catch(e){n(e)}}))})).catch(n)}));return a(n,t),n},keys:function(e){var t=this,r=new s((function(e,r){t.ready().then((function(){O(t._dbInfo,v,(function(n,o){if(n)return r(n);try{var i=o.objectStore(t._dbInfo.storeName).openKeyCursor(),s=[];i.onsuccess=function(){var t=i.result;t?(s.push(t.key),t.continue()):e(s)},i.onerror=function(){r(i.error)}}catch(e){r(e)}}))})).catch(r)}));return a(r,e),r},dropInstance:function(e,t){t=l.apply(this,arguments);var r=this.config();(e="function"!=typeof e&&e||{}).name||(e.name=e.name||r.name,e.storeName=e.storeName||r.storeName);var n,i=this;if(e.name){var c=e.name===r.name&&i._dbInfo.db?s.resolve(i._dbInfo.db):I(e).then((function(t){var r=h[e.name],n=r.forages;r.db=t;for(var o=0;o<n.length;o++)n[o]._dbInfo.db=t;return t}));n=c.then(e.storeName?function(t){if(t.objectStoreNames.contains(e.storeName)){var r=t.version+1;g(e);var n=h[e.name],i=n.forages;t.close();for(var a=0;a<i.length;a++){var c=i[a];c._dbInfo.db=null,c._dbInfo.version=r}return new s((function(t,n){var i=o.open(e.name,r);i.onerror=function(e){i.result.close(),n(e)},i.onupgradeneeded=function(){i.result.deleteObjectStore(e.storeName)},i.onsuccess=function(){var e=i.result;e.close(),t(e)}})).then((function(e){n.db=e;for(var t=0;t<i.length;t++){var r=i[t];r._dbInfo.db=e,_(r._dbInfo)}})).catch((function(t){throw(E(e,t)||s.resolve()).catch((function(){})),t}))}}:function(t){g(e);var r=h[e.name],n=r.forages;t.close();for(var i=0;i<n.length;i++)n[i]._dbInfo.db=null;return new s((function(t,r){var n=o.deleteDatabase(e.name);n.onerror=n.onblocked=function(e){var t=n.result;t&&t.close(),r(e)},n.onsuccess=function(){var e=n.result;e&&e.close(),t(e)}})).then((function(e){r.db=e;for(var t=0;t<n.length;t++)_(n[t]._dbInfo)})).catch((function(t){throw(E(e,t)||s.resolve()).catch((function(){})),t}))})}else n=s.reject("Invalid arguments");return a(n,t),n}},T="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",$=/^~~local_forage_type~([^~]+)~/,M="__lfsc__:",C=M.length,x="arbf",P="blob",j="si08",D="ui08",k="uic8",U="si16",B="si32",F="ur16",G="ui32",H="fl32",q="fl64",z=C+x.length,W=Object.prototype.toString;function X(e){var t,r,n,o,i,s=.75*e.length,a=e.length,c=0;"="===e[e.length-1]&&(s--,"="===e[e.length-2]&&s--);var u=new ArrayBuffer(s),l=new Uint8Array(u);for(t=0;t<a;t+=4)r=T.indexOf(e[t]),n=T.indexOf(e[t+1]),o=T.indexOf(e[t+2]),i=T.indexOf(e[t+3]),l[c++]=r<<2|n>>4,l[c++]=(15&n)<<4|o>>2,l[c++]=(3&o)<<6|63&i;return u}function K(e){var t,r=new Uint8Array(e),n="";for(t=0;t<r.length;t+=3)n+=T[r[t]>>2],n+=T[(3&r[t])<<4|r[t+1]>>4],n+=T[(15&r[t+1])<<2|r[t+2]>>6],n+=T[63&r[t+2]];return r.length%3==2?n=n.substring(0,n.length-1)+"=":r.length%3==1&&(n=n.substring(0,n.length-2)+"=="),n}var V={serialize:function(e,t){var r="";if(e&&(r=W.call(e)),e&&("[object ArrayBuffer]"===r||e.buffer&&"[object ArrayBuffer]"===W.call(e.buffer))){var n,o=M;e instanceof ArrayBuffer?(n=e,o+=x):(n=e.buffer,"[object Int8Array]"===r?o+=j:"[object Uint8Array]"===r?o+=D:"[object Uint8ClampedArray]"===r?o+=k:"[object Int16Array]"===r?o+=U:"[object Uint16Array]"===r?o+=F:"[object Int32Array]"===r?o+=B:"[object Uint32Array]"===r?o+=G:"[object Float32Array]"===r?o+=H:"[object Float64Array]"===r?o+=q:t(new Error("Failed to get type for BinaryArray"))),t(o+K(n))}else if("[object Blob]"===r){var i=new FileReader;i.onload=function(){var r="~~local_forage_type~"+e.type+"~"+K(this.result);t("__lfsc__:blob"+r)},i.readAsArrayBuffer(e)}else try{t(JSON.stringify(e))}catch(r){console.error("Couldn't convert value into a JSON string: ",e),t(null,r)}},deserialize:function(e){if(e.substring(0,C)!==M)return JSON.parse(e);var t,r=e.substring(z),n=e.substring(C,z);if(n===P&&$.test(r)){var o=r.match($);t=o[1],r=r.substring(o[0].length)}var s=X(r);switch(n){case x:return s;case P:return i([s],{type:t});case j:return new Int8Array(s);case D:return new Uint8Array(s);case k:return new Uint8ClampedArray(s);case U:return new Int16Array(s);case F:return new Uint16Array(s);case B:return new Int32Array(s);case G:return new Uint32Array(s);case H:return new Float32Array(s);case q:return new Float64Array(s);default:throw new Error("Unkown type: "+n)}},stringToBuffer:X,bufferToString:K};function Y(e,t,r,n){e.executeSql("CREATE TABLE IF NOT EXISTS "+t.storeName+" (id INTEGER PRIMARY KEY, key unique, value)",[],r,n)}function J(e,t,r,n,o,i){e.executeSql(r,n,o,(function(e,s){s.code===s.SYNTAX_ERR?e.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?",[t.storeName],(function(e,a){a.rows.length?i(e,s):Y(e,t,(function(){e.executeSql(r,n,o,i)}),i)}),i):i(e,s)}),i)}function Q(e,t,r,n){var o=this;e=u(e);var i=new s((function(i,s){o.ready().then((function(){void 0===t&&(t=null);var a=t,c=o._dbInfo;c.serializer.serialize(t,(function(t,u){u?s(u):c.db.transaction((function(r){J(r,c,"INSERT OR REPLACE INTO "+c.storeName+" (key, value) VALUES (?, ?)",[e,t],(function(){i(a)}),(function(e,t){s(t)}))}),(function(t){if(t.code===t.QUOTA_ERR){if(n>0)return void i(Q.apply(o,[e,a,r,n-1]));s(t)}}))}))})).catch(s)}));return a(i,r),i}function Z(e){return new s((function(t,r){e.transaction((function(n){n.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'",[],(function(r,n){for(var o=[],i=0;i<n.rows.length;i++)o.push(n.rows.item(i).name);t({db:e,storeNames:o})}),(function(e,t){r(t)}))}),(function(e){r(e)}))}))}var ee={_driver:"webSQLStorage",_initStorage:function(e){var t=this,r={db:null};if(e)for(var n in e)r[n]="string"!=typeof e[n]?e[n].toString():e[n];var o=new s((function(e,n){try{r.db=openDatabase(r.name,String(r.version),r.description,r.size)}catch(e){return n(e)}r.db.transaction((function(o){Y(o,r,(function(){t._dbInfo=r,e()}),(function(e,t){n(t)}))}),n)}));return r.serializer=V,o},_support:"function"==typeof openDatabase,iterate:function(e,t){var r=this,n=new s((function(t,n){r.ready().then((function(){var o=r._dbInfo;o.db.transaction((function(r){J(r,o,"SELECT * FROM "+o.storeName,[],(function(r,n){for(var i=n.rows,s=i.length,a=0;a<s;a++){var c=i.item(a),u=c.value;if(u&&(u=o.serializer.deserialize(u)),void 0!==(u=e(u,c.key,a+1)))return void t(u)}t()}),(function(e,t){n(t)}))}))})).catch(n)}));return a(n,t),n},getItem:function(e,t){var r=this;e=u(e);var n=new s((function(t,n){r.ready().then((function(){var o=r._dbInfo;o.db.transaction((function(r){J(r,o,"SELECT * FROM "+o.storeName+" WHERE key = ? LIMIT 1",[e],(function(e,r){var n=r.rows.length?r.rows.item(0).value:null;n&&(n=o.serializer.deserialize(n)),t(n)}),(function(e,t){n(t)}))}))})).catch(n)}));return a(n,t),n},setItem:function(e,t,r){return Q.apply(this,[e,t,r,1])},removeItem:function(e,t){var r=this;e=u(e);var n=new s((function(t,n){r.ready().then((function(){var o=r._dbInfo;o.db.transaction((function(r){J(r,o,"DELETE FROM "+o.storeName+" WHERE key = ?",[e],(function(){t()}),(function(e,t){n(t)}))}))})).catch(n)}));return a(n,t),n},clear:function(e){var t=this,r=new s((function(e,r){t.ready().then((function(){var n=t._dbInfo;n.db.transaction((function(t){J(t,n,"DELETE FROM "+n.storeName,[],(function(){e()}),(function(e,t){r(t)}))}))})).catch(r)}));return a(r,e),r},length:function(e){var t=this,r=new s((function(e,r){t.ready().then((function(){var n=t._dbInfo;n.db.transaction((function(t){J(t,n,"SELECT COUNT(key) as c FROM "+n.storeName,[],(function(t,r){var n=r.rows.item(0).c;e(n)}),(function(e,t){r(t)}))}))})).catch(r)}));return a(r,e),r},key:function(e,t){var r=this,n=new s((function(t,n){r.ready().then((function(){var o=r._dbInfo;o.db.transaction((function(r){J(r,o,"SELECT key FROM "+o.storeName+" WHERE id = ? LIMIT 1",[e+1],(function(e,r){var n=r.rows.length?r.rows.item(0).key:null;t(n)}),(function(e,t){n(t)}))}))})).catch(n)}));return a(n,t),n},keys:function(e){var t=this,r=new s((function(e,r){t.ready().then((function(){var n=t._dbInfo;n.db.transaction((function(t){J(t,n,"SELECT key FROM "+n.storeName,[],(function(t,r){for(var n=[],o=0;o<r.rows.length;o++)n.push(r.rows.item(o).key);e(n)}),(function(e,t){r(t)}))}))})).catch(r)}));return a(r,e),r},dropInstance:function(e,t){t=l.apply(this,arguments);var r=this.config();(e="function"!=typeof e&&e||{}).name||(e.name=e.name||r.name,e.storeName=e.storeName||r.storeName);var n,o=this;return a(n=e.name?new s((function(t){var n;n=e.name===r.name?o._dbInfo.db:openDatabase(e.name,"","",0),t(e.storeName?{db:n,storeNames:[e.storeName]}:Z(n))})).then((function(e){return new s((function(t,r){e.db.transaction((function(n){function o(e){return new s((function(t,r){n.executeSql("DROP TABLE IF EXISTS "+e,[],(function(){t()}),(function(e,t){r(t)}))}))}for(var i=[],a=0,c=e.storeNames.length;a<c;a++)i.push(o(e.storeNames[a]));s.all(i).then((function(){t()})).catch((function(e){r(e)}))}),(function(e){r(e)}))}))})):s.reject("Invalid arguments"),t),n}};function te(e,t){var r=e.name+"/";return e.storeName!==t.storeName&&(r+=e.storeName+"/"),r}var re={_driver:"localStorageWrapper",_initStorage:function(e){var t={};if(e)for(var r in e)t[r]=e[r];return t.keyPrefix=te(e,this._defaultConfig),!function(){var e="_localforage_support_test";try{return localStorage.setItem(e,!0),localStorage.removeItem(e),!1}catch(e){return!0}}()||localStorage.length>0?(this._dbInfo=t,t.serializer=V,s.resolve()):s.reject()},_support:function(){try{return"undefined"!=typeof localStorage&&"setItem"in localStorage&&!!localStorage.setItem}catch(e){return!1}}(),iterate:function(e,t){var r=this,n=r.ready().then((function(){for(var t=r._dbInfo,n=t.keyPrefix,o=n.length,i=localStorage.length,s=1,a=0;a<i;a++){var c=localStorage.key(a);if(0===c.indexOf(n)){var u=localStorage.getItem(c);if(u&&(u=t.serializer.deserialize(u)),void 0!==(u=e(u,c.substring(o),s++)))return u}}}));return a(n,t),n},getItem:function(e,t){var r=this;e=u(e);var n=r.ready().then((function(){var t=r._dbInfo,n=localStorage.getItem(t.keyPrefix+e);return n&&(n=t.serializer.deserialize(n)),n}));return a(n,t),n},setItem:function(e,t,r){var n=this;e=u(e);var o=n.ready().then((function(){void 0===t&&(t=null);var r=t;return new s((function(o,i){var s=n._dbInfo;s.serializer.serialize(t,(function(t,n){if(n)i(n);else try{localStorage.setItem(s.keyPrefix+e,t),o(r)}catch(e){"QuotaExceededError"!==e.name&&"NS_ERROR_DOM_QUOTA_REACHED"!==e.name||i(e),i(e)}}))}))}));return a(o,r),o},removeItem:function(e,t){var r=this;e=u(e);var n=r.ready().then((function(){localStorage.removeItem(r._dbInfo.keyPrefix+e)}));return a(n,t),n},clear:function(e){var t=this,r=t.ready().then((function(){for(var e=t._dbInfo.keyPrefix,r=localStorage.length-1;r>=0;r--){var n=localStorage.key(r);0===n.indexOf(e)&&localStorage.removeItem(n)}}));return a(r,e),r},length:function(e){var t=this.keys().then((function(e){return e.length}));return a(t,e),t},key:function(e,t){var r=this,n=r.ready().then((function(){var t,n=r._dbInfo;try{t=localStorage.key(e)}catch(e){t=null}return t&&(t=t.substring(n.keyPrefix.length)),t}));return a(n,t),n},keys:function(e){var t=this,r=t.ready().then((function(){for(var e=t._dbInfo,r=localStorage.length,n=[],o=0;o<r;o++){var i=localStorage.key(o);0===i.indexOf(e.keyPrefix)&&n.push(i.substring(e.keyPrefix.length))}return n}));return a(r,e),r},dropInstance:function(e,t){if(t=l.apply(this,arguments),!(e="function"!=typeof e&&e||{}).name){var r=this.config();e.name=e.name||r.name,e.storeName=e.storeName||r.storeName}var n,o=this;return a(n=e.name?new s((function(t){t(e.storeName?te(e,o._defaultConfig):e.name+"/")})).then((function(e){for(var t=localStorage.length-1;t>=0;t--){var r=localStorage.key(t);0===r.indexOf(e)&&localStorage.removeItem(r)}})):s.reject("Invalid arguments"),t),n}},ne=function(e,t){for(var r=e.length,n=0;n<r;){if((o=e[n])===(i=t)||"number"==typeof o&&"number"==typeof i&&isNaN(o)&&isNaN(i))return!0;n++}var o,i;return!1},oe=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},ie={},se={},ae={INDEXEDDB:L,WEBSQL:ee,LOCALSTORAGE:re},ce=[ae.INDEXEDDB._driver,ae.WEBSQL._driver,ae.LOCALSTORAGE._driver],ue=["dropInstance"],le=["clear","getItem","iterate","key","keys","length","removeItem","setItem"].concat(ue),de={description:"",driver:ce.slice(),name:"localforage",size:4980736,storeName:"keyvaluepairs",version:1};function fe(e,t){e[t]=function(){var r=arguments;return e.ready().then((function(){return e[t].apply(e,r)}))}}function he(){for(var e=1;e<arguments.length;e++){var t=arguments[e];if(t)for(var r in t)t.hasOwnProperty(r)&&(arguments[0][r]=oe(t[r])?t[r].slice():t[r])}return arguments[0]}var pe=new(function(){function e(t){for(var r in function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),ae)if(ae.hasOwnProperty(r)){var n=ae[r],o=n._driver;this[r]=o,ie[o]||this.defineDriver(n)}this._defaultConfig=he({},de),this._config=he({},this._defaultConfig,t),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch((function(){}))}return e.prototype.config=function(e){if("object"===(void 0===e?"undefined":n(e))){if(this._ready)return new Error("Can't call config() after localforage has been used.");for(var t in e){if("storeName"===t&&(e[t]=e[t].replace(/\W/g,"_")),"version"===t&&"number"!=typeof e[t])return new Error("Database version must be a number.");this._config[t]=e[t]}return!("driver"in e)||!e.driver||this.setDriver(this._config.driver)}return"string"==typeof e?this._config[e]:this._config},e.prototype.defineDriver=function(e,t,r){var n=new s((function(t,r){try{var n=e._driver,o=new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");if(!e._driver)return void r(o);for(var i=le.concat("_initStorage"),c=0,u=i.length;c<u;c++){var l=i[c];if((!ne(ue,l)||e[l])&&"function"!=typeof e[l])return void r(o)}!function(){for(var t=function(e){return function(){var t=new Error("Method "+e+" is not implemented by the current driver"),r=s.reject(t);return a(r,arguments[arguments.length-1]),r}},r=0,n=ue.length;r<n;r++){var o=ue[r];e[o]||(e[o]=t(o))}}();var d=function(r){ie[n]&&console.info("Redefining LocalForage driver: "+n),ie[n]=e,se[n]=r,t()};"_support"in e?e._support&&"function"==typeof e._support?e._support().then(d,r):d(!!e._support):d(!0)}catch(e){r(e)}}));return c(n,t,r),n},e.prototype.driver=function(){return this._driver||null},e.prototype.getDriver=function(e,t,r){var n=ie[e]?s.resolve(ie[e]):s.reject(new Error("Driver not found."));return c(n,t,r),n},e.prototype.getSerializer=function(e){var t=s.resolve(V);return c(t,e),t},e.prototype.ready=function(e){var t=this,r=t._driverSet.then((function(){return null===t._ready&&(t._ready=t._initDriver()),t._ready}));return c(r,e,e),r},e.prototype.setDriver=function(e,t,r){var n=this;oe(e)||(e=[e]);var o=this._getSupportedDrivers(e);function i(){n._config.driver=n.driver()}function a(e){return n._extend(e),i(),n._ready=n._initStorage(n._config),n._ready}var u=null!==this._driverSet?this._driverSet.catch((function(){return s.resolve()})):s.resolve();return this._driverSet=u.then((function(){var e=o[0];return n._dbInfo=null,n._ready=null,n.getDriver(e).then((function(e){n._driver=e._driver,i(),n._wrapLibraryMethodsWithReady(),n._initDriver=function(e){return function(){var t=0;return function r(){for(;t<e.length;){var o=e[t];return t++,n._dbInfo=null,n._ready=null,n.getDriver(o).then(a).catch(r)}i();var c=new Error("No available storage method found.");return n._driverSet=s.reject(c),n._driverSet}()}}(o)}))})).catch((function(){i();var e=new Error("No available storage method found.");return n._driverSet=s.reject(e),n._driverSet})),c(this._driverSet,t,r),this._driverSet},e.prototype.supports=function(e){return!!se[e]},e.prototype._extend=function(e){he(this,e)},e.prototype._getSupportedDrivers=function(e){for(var t=[],r=0,n=e.length;r<n;r++){var o=e[r];this.supports(o)&&t.push(o)}return t},e.prototype._wrapLibraryMethodsWithReady=function(){for(var e=0,t=le.length;e<t;e++)fe(this,le[e])},e.prototype.createInstance=function(t){return new e(t)},e}());t.exports=pe},{3:3}]},{},[4])(4)})),st=nt((function(e,t){"undefined"!=typeof self&&self,function(e){var t=/^~~local_forage_type~([^~]+)~/,r="__lfsc__:".length,n=r+"arbf".length,o=Object.prototype.toString;function i(e){var t=.75*e.length,r=e.length;"="===e[e.length-1]&&(t--,"="===e[e.length-2]&&t--);for(var n=new ArrayBuffer(t),o=new Uint8Array(n),i=0,s=0;i<r;i+=4){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[i]),c="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[i+1]),u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[i+2]),l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(e[i+3]);o[s++]=a<<2|c>>4,o[s++]=(15&c)<<4|u>>2,o[s++]=(3&u)<<6|63&l}return n}function s(e){for(var t=new Uint8Array(e),r="",n=0;n<t.length;n+=3)r+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[t[n]>>2],r+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(3&t[n])<<4|t[n+1]>>4],r+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(15&t[n+1])<<2|t[n+2]>>6],r+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[63&t[n+2]];return t.length%3==2?r=r.substring(0,r.length-1)+"=":t.length%3==1&&(r=r.substring(0,r.length-2)+"=="),r}function a(e){var t,r;if(null===e||"object"!=typeof e||"isActiveClone"in e)return e;var n=e instanceof Date?new Date(e):e.constructor();try{for(var o=function(e){var t="function"==typeof Symbol&&e[Symbol.iterator],r=0;return t?t.call(e):{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}}(Object.keys(e)),i=o.next();!i.done;i=o.next()){var s=i.value;Object.prototype.hasOwnProperty.call(e,s)&&(e.isActiveClone=null,n[s]=a(e[s]),delete e.isActiveClone)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return n}function c(e,t){return(e.name||t.name)+"/"+(e.storeName||t.storeName)+"/"}function u(e,t){t&&e.then((function(e){t(null,e)}),(function(e){t(e)}))}function l(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(arguments.length&&"function"==typeof arguments[arguments.length-1])return arguments[arguments.length-1]}function d(e,t){var r=this;if(t=l.apply(this,arguments),!(e="function"!=typeof e&&e||{}).name){var n=this.config();e.name=e.name||n.name,e.storeName=e.storeName||n.storeName}return{promise:e.name?new Promise((function(t){t(e.storeName?c(e,r._defaultConfig):e.name+"/")})):Promise.reject("Invalid arguments"),callback:t}}function f(e){return"string"!=typeof e&&(console.warn(e+" used as a key, but it is not a string."),e=String(e)),e}var h={bufferToString:s,deserialize:function(e){if("__lfsc__:"!==e.substring(0,r))return JSON.parse(e);var o,s=e.substring(n),a=e.substring(r,n);if("blob"===a&&t.test(s)){var c=s.match(t);o=c[1],s=s.substring(c[0].length)}var u=i(s);switch(a){case"arbf":return u;case"blob":return function(e,t){e=e||[],t=t||{};try{return new Blob(e,t)}catch(o){if("TypeError"!==o.name)throw o;for(var r=new("undefined"!=typeof BlobBuilder?BlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder),n=0;n<e.length;n+=1)r.append(e[n]);return r.getBlob(t.type)}}([u],{type:o});case"si08":return new Int8Array(u);case"ui08":return new Uint8Array(u);case"uic8":return new Uint8ClampedArray(u);case"si16":return new Int16Array(u);case"ur16":return new Uint16Array(u);case"si32":return new Int32Array(u);case"ui32":return new Uint32Array(u);case"fl32":return new Float32Array(u);case"fl64":return new Float64Array(u);default:throw new Error("Unkown type: "+a)}},serialize:function(e,t){var r="";if(e&&(r=o.call(e)),e&&("[object ArrayBuffer]"===r||e.buffer&&"[object ArrayBuffer]"===o.call(e.buffer))){var n=void 0,i="__lfsc__:";e instanceof ArrayBuffer?(n=e,i+="arbf"):(n=e.buffer,"[object Int8Array]"===r?i+="si08":"[object Uint8Array]"===r?i+="ui08":"[object Uint8ClampedArray]"===r?i+="uic8":"[object Int16Array]"===r?i+="si16":"[object Uint16Array]"===r?i+="ur16":"[object Int32Array]"===r?i+="si32":"[object Uint32Array]"===r?i+="ui32":"[object Float32Array]"===r?i+="fl32":"[object Float64Array]"===r?i+="fl64":t(new Error("Failed to get type for BinaryArray"))),t(i+s(n))}else if("[object Blob]"===r){var a=new FileReader;a.onload=function(){var r="~~local_forage_type~"+e.type+"~"+s(this.result);t("__lfsc__:blob"+r)},a.readAsArrayBuffer(e)}else try{t(JSON.stringify(e))}catch(r){console.error("Couldn't convert value into a JSON string: ",e),t(null,r)}},stringToBuffer:i},p={},v=function(){function e(e){this.kp=e,this.data={}}return e.resolve=function(t){return p[t]||(p[t]=new e(t)),p[t]},e.prototype.clear=function(){this.data={}},e.prototype.drop=function(){this.clear(),delete p[this.kp]},e.prototype.get=function(e){return this.data[e]},e.prototype.key=function(e){return this.keys()[e]},e.prototype.keys=function(){return Object.keys(this.data)},e.prototype.rm=function(e){delete this.data[e]},e.prototype.set=function(e,t){this.data[e]=t},e}();e._support=!0,e._driver="localforage-driver-memory",e._initStorage=function(e){var t=e?a(e):{},r=c(t,this._defaultConfig),n=v.resolve(r);return this._dbInfo=t,this._dbInfo.serializer=h,this._dbInfo.keyPrefix=r,this._dbInfo.mStore=n,Promise.resolve()},e.clear=function(e){var t=this,r=this.ready().then((function(){t._dbInfo.mStore.clear()}));return u(r,e),r},e.dropInstance=function(e,t){var r=d.apply(this,arguments),n=r.promise,o=r.callback;return u(n.then((function(e){v.resolve(e).drop()})),o),n},e.getItem=function(e,t){var r=this;e=f(e);var n=this.ready().then((function(){var t=r._dbInfo.mStore.get(e);return null==t?null:r._dbInfo.serializer.deserialize(t)}));return u(n,t),n},e.iterate=function(e,t){var r=this,n=this.ready().then((function(){for(var t=r._dbInfo.mStore,n=t.keys(),o=0;o<n.length;o++){var i=t.get(n[o]);if(i&&(i=r._dbInfo.serializer.deserialize(i)),void 0!==(i=e(i,n[o],o+1)))return i}}));return u(n,t),n},e.key=function(e,t){var r=this,n=this.ready().then((function(){var t;try{void 0===(t=r._dbInfo.mStore.key(e))&&(t=null)}catch(e){t=null}return t}));return u(n,t),n},e.keys=function(e){var t=this,r=this.ready().then((function(){return t._dbInfo.mStore.keys()}));return u(r,e),r},e.length=function(e){var t=this.keys().then((function(e){return e.length}));return u(t,e),t},e.removeItem=function(e,t){var r=this;e=f(e);var n=this.ready().then((function(){r._dbInfo.mStore.rm(e)}));return u(n,t),n},e.setItem=function(e,t,r){var n=this;e=f(e);var o=this.ready().then((function(){void 0===t&&(t=null);var r=t;return new Promise((function(o,i){n._dbInfo.serializer.serialize(t,(function(t,s){if(s)i(s);else try{n._dbInfo.mStore.set(e,t),o(r)}catch(e){i(e)}}))}))}));return u(o,r),o},Object.defineProperty(e,"__esModule",{value:!0})}(t)})),at=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}(st),ct=Object.assign(Object.create(null),st,{default:at});const ut={display:"none",position:"fixed",top:"0",right:"0",width:"100%",height:"100%",borderRadius:"0",border:"none",zIndex:"2147483647"},lt=function(e,t){return Object.assign(ne,t),e}(tt,{platform:"web",sdkName:"magic-sdk",version:"6.2.1",defaultEndpoint:"https://auth.magic.link/",ViewController:class extends class{constructor(e,t){this.endpoint=void 0,this.parameters=void 0,this.ready=void 0,this.messageHandlers=new Set,this.endpoint=e,this.parameters=t,this.ready=this.waitForReady(),this.listen()}async post(e,t){var r=this;return Ae((async function(n){await r.ready;const i=[],s=Array.isArray(t)?t.map((e=>e.id)):[],a=await async function(e,t){const r=await Le("rt");let n;if("web"===ne.platform)try{n=await async function(){const e=await async function(){if(function(){const e="undefined"!=typeof window&&!!window.crypto,t=e&&!!window.crypto.subtle;return e&&t}())return await Le("STORE_KEY_PUBLIC_JWK")||await async function(){let e=null;const{subtle:t}=window.crypto,r=await t.generateKey(Ue,!0,["sign"]),n=await t.exportKey("jwk",r.privateKey);e=await t.exportKey("jwk",r.publicKey);const o=await t.importKey("jwk",n,Be,!1,["sign"]);await Te("STORE_KEY_PRIVATE_KEY",o),await Te("STORE_KEY_PUBLIC_JWK",e)}(),Le("STORE_KEY_PUBLIC_JWK");console.info("webcrypto is not supported")}();if(!e)return void console.info("unable to create public key or webcrypto is unsupported");const{subtle:t}=window.crypto,r=await Le("STORE_KEY_PRIVATE_KEY");if(!r||!t)return void console.info("unable to find private key or webcrypto unsupported");const n={iat:Math.floor((new Date).getTime()/1e3),jti:ke()},o=Fe(JSON.stringify({typ:"dpop+jwt",alg:"ES256",jwk:e})),i=Fe(JSON.stringify(n)),s=(a=`${o}.${i}`,(new TextEncoder).encode(a));var a;return`${o}.${i}.${function(e){let t="";return e.forEach((e=>{t+=String.fromCharCode(e)})),Ge(t)}(new Uint8Array(await t.sign({name:"ECDSA",hash:{name:"SHA-256"}},r,s)))}`}()}catch(e){console.error("webcrypto error",e)}return n?r?{msgType:e,payload:t,jwt:n,rt:r}:{msgType:e,payload:t,jwt:n}:{msgType:e,payload:t}}(`${e}-${r.parameters}`,t);await r._post(a);const c=r.on(o.MAGIC_HANDLE_RESPONSE,(u=()=>c(),e=>{const{id:r,response:o}=function(e,t){var r;const n=null==(r=t.data.response)?void 0:r.id,o=function(e,t){return t&&Array.isArray(e)?e.find((e=>e.id===t)):e}(e,n);return n&&o?{id:n,response:new me(o).applyResult(t.data.response.result).applyError(t.data.response.error)}:{}}(t,e);!async function(e){e.data.rt&&await Te("rt",e.data.rt)}(e),r&&o&&Array.isArray(t)&&s.includes(r)?(i.push(o),i.length===t.length&&(u(),n(i))):r&&o&&!Array.isArray(t)&&r===t.id&&(u(),n(o))}));var u}))}on(e,t){const r=t.bind(window),n=t=>{t.data.msgType===`${e}-${this.parameters}`&&r(t)};return this.messageHandlers.add(n),()=>this.messageHandlers.delete(n)}waitForReady(){return new Promise((e=>{this.on(o.MAGIC_OVERLAY_READY,(()=>e()))}))}listen(){this.on(o.MAGIC_HIDE_OVERLAY,(()=>{this.hideOverlay()})),this.on(o.MAGIC_SHOW_OVERLAY,(()=>{this.showOverlay()}))}}{constructor(...e){super(...e),this.iframe=void 0,this.activeElement=null}init(){this.test="hello",this.iframe=new Promise((e=>{const r=()=>{if(function(e){const t=[].slice.call(document.querySelectorAll(".magic-iframe"));return Boolean(t.find((t=>t.src.includes(e))))}(encodeURIComponent(this.parameters)))new ae(t.DuplicateIframe,"Duplicate iframes found.").log();else{const t=document.createElement("iframe");t.classList.add("magic-iframe"),t.dataset.magicIframeLabel=Ke(this.endpoint).host,t.title="Secure Modal",t.src=Ke(`/send?params=${encodeURIComponent(this.parameters)}`,this.endpoint).href,function(e){for(const[t,r]of Object.entries(ut))e.style[t]=r}(t),document.body.appendChild(t),e(t)}};["loaded","interactive","complete"].includes(document.readyState)?r():window.addEventListener("load",r,!1)})),window.addEventListener("message",(e=>{if(e.origin===this.endpoint&&e.data&&e.data.msgType&&this.messageHandlers.size){var t;e.data.response=null!=(t=e.data.response)?t:{};for(const t of this.messageHandlers.values())t(e)}}))}async showOverlay(){const e=await this.iframe;e.style.display="block",this.activeElement=document.activeElement,e.focus()}async hideOverlay(){var e;(await this.iframe).style.display="none",null!==(e=this.activeElement)&&void 0!==e&&e.focus&&this.activeElement.focus(),this.activeElement=null}async _post(t){const r=await this.iframe;if(!r||!r.contentWindow)throw new ie(e.ModalNotReady,"Modal is not ready.");r.contentWindow.postMessage(t,this.endpoint)}},configureStorage:async()=>{const e=it.createInstance({name:"MagicAuthLocalStorageDB",storeName:"MagicAuthLocalStorage"});return await e.defineDriver(ct),await e.setDriver([it.INDEXEDDB,it.LOCALSTORAGE,st._driver]),e}});var dt,ft=Object.create,ht=Object.defineProperty,pt=Object.getOwnPropertyDescriptor,vt=Object.getOwnPropertyNames,mt=Object.getPrototypeOf,yt=Object.prototype.hasOwnProperty,gt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),_t=(e,t)=>((e,t,r,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of vt(t))!yt.call(e,r)&&"default"!==r&&ht(e,r,{get:()=>t[r],enumerable:!(n=pt(t,r))||n.enumerable});return e})((e=>ht(e,"__esModule",{value:!0}))(ht(null!=e?ft(mt(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),Et=(e,t,r)=>new Promise(((n,o)=>{var i=e=>{try{a(r.next(e))}catch(e){o(e)}},s=e=>{try{a(r.throw(e))}catch(e){o(e)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(i,s);a((r=r.apply(e,t)).next())})),bt=gt(((e,t)=>{!function(r,n){"object"==typeof e?t.exports=e=n():"function"==typeof define&&define.amd?define([],n):r.CryptoJS=n()}(e,(function(){var e=e||function(e,t){var r=Object.create||function(){function e(){}return function(t){var r;return e.prototype=t,r=new e,e.prototype=null,r}}(),n={},o=n.lib={},i=o.Base={extend:function(e){var t=r(this);return e&&t.mixIn(e),(!t.hasOwnProperty("init")||this.init===t.init)&&(t.init=function(){t.$super.init.apply(this,arguments)}),t.init.prototype=t,t.$super=this,t},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},mixIn:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}},s=o.WordArray=i.extend({init:function(e,t){e=this.words=e||[],this.sigBytes=null!=t?t:4*e.length},toString:function(e){return(e||c).stringify(this)},concat:function(e){var t=this.words,r=e.words,n=this.sigBytes,o=e.sigBytes;if(this.clamp(),n%4)for(var i=0;i<o;i++){var s=r[i>>>2]>>>24-i%4*8&255;t[n+i>>>2]|=s<<24-(n+i)%4*8}else for(i=0;i<o;i+=4)t[n+i>>>2]=r[i>>>2];return this.sigBytes+=o,this},clamp:function(){var t=this.words,r=this.sigBytes;t[r>>>2]&=4294967295<<32-r%4*8,t.length=e.ceil(r/4)},clone:function(){var e=i.clone.call(this);return e.words=this.words.slice(0),e},random:function(t){for(var r,n=[],o=function(t){var r=987654321,n=4294967295;return function(){var o=((r=36969*(65535&r)+(r>>16)&n)<<16)+(t=18e3*(65535&t)+(t>>16)&n)&n;return o/=4294967296,(o+=.5)*(e.random()>.5?1:-1)}},i=0;i<t;i+=4){var a=o(4294967296*(r||e.random()));r=987654071*a(),n.push(4294967296*a()|0)}return new s.init(n,t)}}),a=n.enc={},c=a.Hex={stringify:function(e){for(var t=e.words,r=e.sigBytes,n=[],o=0;o<r;o++){var i=t[o>>>2]>>>24-o%4*8&255;n.push((i>>>4).toString(16)),n.push((15&i).toString(16))}return n.join("")},parse:function(e){for(var t=e.length,r=[],n=0;n<t;n+=2)r[n>>>3]|=parseInt(e.substr(n,2),16)<<24-n%8*4;return new s.init(r,t/2)}},u=a.Latin1={stringify:function(e){for(var t=e.words,r=e.sigBytes,n=[],o=0;o<r;o++){var i=t[o>>>2]>>>24-o%4*8&255;n.push(String.fromCharCode(i))}return n.join("")},parse:function(e){for(var t=e.length,r=[],n=0;n<t;n++)r[n>>>2]|=(255&e.charCodeAt(n))<<24-n%4*8;return new s.init(r,t)}},l=a.Utf8={stringify:function(e){try{return decodeURIComponent(escape(u.stringify(e)))}catch{throw new Error("Malformed UTF-8 data")}},parse:function(e){return u.parse(unescape(encodeURIComponent(e)))}},d=o.BufferedBlockAlgorithm=i.extend({reset:function(){this._data=new s.init,this._nDataBytes=0},_append:function(e){"string"==typeof e&&(e=l.parse(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes},_process:function(t){var r=this._data,n=r.words,o=r.sigBytes,i=this.blockSize,a=o/(4*i),c=(a=t?e.ceil(a):e.max((0|a)-this._minBufferSize,0))*i,u=e.min(4*c,o);if(c){for(var l=0;l<c;l+=i)this._doProcessBlock(n,l);var d=n.splice(0,c);r.sigBytes-=u}return new s.init(d,u)},clone:function(){var e=i.clone.call(this);return e._data=this._data.clone(),e},_minBufferSize:0}),f=(o.Hasher=d.extend({cfg:i.extend(),init:function(e){this.cfg=this.cfg.extend(e),this.reset()},reset:function(){d.reset.call(this),this._doReset()},update:function(e){return this._append(e),this._process(),this},finalize:function(e){return e&&this._append(e),this._doFinalize()},blockSize:16,_createHelper:function(e){return function(t,r){return new e.init(r).finalize(t)}},_createHmacHelper:function(e){return function(t,r){return new f.HMAC.init(e,r).finalize(t)}}}),n.algo={});return n}(Math);return e}))})),It=gt(((e,t)=>{!function(r,n){"object"==typeof e?t.exports=e=n(bt()):"function"==typeof define&&define.amd?define(["./core"],n):n(r.CryptoJS)}(e,(function(e){return function(t){var r=e,n=r.lib,o=n.WordArray,i=n.Hasher,s=r.algo,a=[],c=[];!function(){function e(e){for(var r=t.sqrt(e),n=2;n<=r;n++)if(!(e%n))return!1;return!0}function r(e){return 4294967296*(e-(0|e))|0}for(var n=2,o=0;o<64;)e(n)&&(o<8&&(a[o]=r(t.pow(n,.5))),c[o]=r(t.pow(n,1/3)),o++),n++}();var u=[],l=s.SHA256=i.extend({_doReset:function(){this._hash=new o.init(a.slice(0))},_doProcessBlock:function(e,t){for(var r=this._hash.words,n=r[0],o=r[1],i=r[2],s=r[3],a=r[4],l=r[5],d=r[6],f=r[7],h=0;h<64;h++){if(h<16)u[h]=0|e[t+h];else{var p=u[h-15],v=(p<<25|p>>>7)^(p<<14|p>>>18)^p>>>3,m=u[h-2],y=(m<<15|m>>>17)^(m<<13|m>>>19)^m>>>10;u[h]=v+u[h-7]+y+u[h-16]}var g=n&o^n&i^o&i,_=(n<<30|n>>>2)^(n<<19|n>>>13)^(n<<10|n>>>22),E=f+((a<<26|a>>>6)^(a<<21|a>>>11)^(a<<7|a>>>25))+(a&l^~a&d)+c[h]+u[h];f=d,d=l,l=a,a=s+E|0,s=i,i=o,o=n,n=E+(_+g)|0}r[0]=r[0]+n|0,r[1]=r[1]+o|0,r[2]=r[2]+i|0,r[3]=r[3]+s|0,r[4]=r[4]+a|0,r[5]=r[5]+l|0,r[6]=r[6]+d|0,r[7]=r[7]+f|0},_doFinalize:function(){var e=this._data,r=e.words,n=8*this._nDataBytes,o=8*e.sigBytes;return r[o>>>5]|=128<<24-o%32,r[14+(o+64>>>9<<4)]=t.floor(n/4294967296),r[15+(o+64>>>9<<4)]=n,e.sigBytes=4*r.length,this._process(),this._hash},clone:function(){var e=i.clone.call(this);return e._hash=this._hash.clone(),e}});r.SHA256=i._createHelper(l),r.HmacSHA256=i._createHmacHelper(l)}(Math),e.SHA256}))})),wt=gt(((e,t)=>{!function(r,n){"object"==typeof e?t.exports=e=n(bt()):"function"==typeof define&&define.amd?define(["./core"],n):n(r.CryptoJS)}(e,(function(e){return function(){var t=e,r=t.lib.WordArray;t.enc.Base64={stringify:function(e){var t=e.words,r=e.sigBytes,n=this._map;e.clamp();for(var o=[],i=0;i<r;i+=3)for(var s=(t[i>>>2]>>>24-i%4*8&255)<<16|(t[i+1>>>2]>>>24-(i+1)%4*8&255)<<8|t[i+2>>>2]>>>24-(i+2)%4*8&255,a=0;a<4&&i+.75*a<r;a++)o.push(n.charAt(s>>>6*(3-a)&63));var c=n.charAt(64);if(c)for(;o.length%4;)o.push(c);return o.join("")},parse:function(e){var t=e.length,n=this._map,o=this._reverseMap;if(!o){o=this._reverseMap=[];for(var i=0;i<n.length;i++)o[n.charCodeAt(i)]=i}var s=n.charAt(64);if(s){var a=e.indexOf(s);-1!==a&&(t=a)}return function(e,t,n){for(var o=[],i=0,s=0;s<t;s++)if(s%4){var a=n[e.charCodeAt(s-1)]<<s%4*2,c=n[e.charCodeAt(s)]>>>6-s%4*2;o[i>>>2]|=(a|c)<<24-i%4*8,i++}return r.create(o,i)}(e,t,o)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}}(),e.enc.Base64}))})),At=((dt=At||{}).ParseRedirectResult="magic_oauth_parse_redirect_result",dt),Rt=(e=>(e.InvalidRequest="invalid_request",e.InvalidClient="invalid_client",e.InvalidScope="invalid_scope",e.InvalidGrant="invalid_grant",e.UnauthorizedClient="unauthorized_client",e.UnsupportedResponseType="unsupported_response_type",e.UnsupportedGrantType="unsupported_grant_type",e.UnsupportedTokenType="unsupported_token_type",e.AccessDenied="access_denied",e.ServerError="server_error",e.TemporarilyUnavailable="temporarily_unavailable",e))(Rt||{}),St=_t(It()),Nt=_t(wt()),Ot="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~",Lt="undefined"!=typeof window&&!!window.crypto,Tt=Lt&&!!window.crypto.subtle;function $t(e){let t=e=>e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"");if(e instanceof ArrayBuffer){let r=new Uint8Array(e),n=Array.from(r).map((e=>String.fromCharCode(e))).join("");return t(btoa(n))}return t(Nt.default.stringify(e))}function Mt(e){let t=new Uint8Array(e);if(Lt)window.crypto.getRandomValues(t);else for(let r=0;r<e;r+=1)t[r]=Math.floor(Math.random()*Math.floor(255));return function(e){return Array.from(e).map((e=>Ot[e%Ot.length])).join("")}(t)}var Ct=class extends Qe.Internal{constructor(){super(...arguments),this.name="oauth",this.config={},this.compat={"magic-sdk":">=2.4.6","@magic-sdk/react-native":!1}}loginWithRedirect(e){return this.utils.createPromiEvent((t=>Et(this,null,(function*(){let{provider:r,query:n}=yield Pt.call(this,e);window.location.href=new URL(`/v1/oauth2/${r}/start?${n}`,this.sdk.endpoint).href,t()}))))}getRedirectResult(){let e=window.location.search,t=window.location.origin+window.location.pathname;return window.history.replaceState(null,"",t),jt.call(this,e)}},xt="oauth_redirect_metadata";function Pt(e){return Et(this,null,(function*(){yield this.utils.storage.removeItem(xt);let{provider:t,redirectURI:r,scope:n,loginHint:o}=e,{verifier:i,challenge:s,state:a}=yield function(){return Et(this,null,(function*(){let e=Mt(128),t=Mt(128),r=yield function(e){return Et(this,null,(function*(){if(Tt){let t=(new TextEncoder).encode(e);return crypto.subtle.digest("SHA-256",t).then($t)}return $t((0,St.default)(e))}))}(t);return{verifier:t,challenge:r,state:e}}))}(),c=JSON.stringify({verifier:i,state:a});return yield this.utils.storage.setItem(xt,c),{query:[`magic_api_key=${encodeURIComponent(this.sdk.apiKey)}`,`magic_challenge=${encodeURIComponent(s)}`,`state=${encodeURIComponent(a)}`,`platform=${encodeURIComponent("web")}`,n&&`scope=${encodeURIComponent(n.join(" "))}`,r&&`redirect_uri=${encodeURIComponent(r)}`,o&&`login_hint=${encodeURIComponent(o)}`].reduce(((e,t)=>t?`${e}&${t}`:e)),provider:t,redirectURI:r}}))}function jt(e){return this.utils.createPromiEvent(((t,r)=>Et(this,null,(function*(){var n;let o=yield this.utils.storage.getItem(xt),{verifier:i,state:s}=JSON.parse(o);this.utils.storage.removeItem(xt);let a=this.utils.createJsonRpcRequestPayload("magic_oauth_parse_redirect_result",[e,i,s]),c=yield this.request(a),u=c,l=c;l.error&&r(this.createError(l.error,null!=(n=l.error_description)?n:"An error occurred.",{errorURI:l.error_uri,provider:l.provider})),t(u)}))))}async function Dt(e,t=null){let r,n;try{const o={method:"post",headers:{"Content-Type":"application/json"}};return t&&(o.body=JSON.stringify(t)),r=await fetch(e,o),n=await r.text(),n?JSON.parse(n):{}}catch(t){return!r||r.status>=400?n?{error:n}:{error:t||`An error occurred during fizzetch of ${e}`}:{}}}const kt=document.querySelector("body > #loader");class Ut extends HTMLFormElement{_inputs;_errorMessage;submitButton;constructor(e){super(),e={async:!1,action:"",submitText:"Submit",success:()=>{},customFetch:!1,fullscreenLoading:!1,extraData:{},html:"",...e},this.options=e,this.classList.add("di-form"),this.innerHTML=`\n<div class="inputs">${e.html}</div>\n<div class="bottom">\n  <button type="submit"></button>\n  <div class="error-message hidden"></div>\n</div>\n`,this._inputs=this.querySelector(".inputs"),this.submitButton=this.querySelector("button"),this.submitButton.textContent=e.submitText,this._errorMessage=this.querySelector(".error-message"),e.action&&this.setAttribute("action",e.action),e.async&&this.addEventListener("submit",(async t=>{t.preventDefault(),this._loading();const r=e.action instanceof Function?await e.action():await Dt(e.action,this.data());this._loadingFinished(),r.error?this.error(r.error):(e.success(r),this.dispatchEvent(new Event("success")))}))}data(){const e=new FormData(this),t={};Array.from(e.entries()).forEach((([e,r])=>t[e]=r));let r=this.options.extraData;return r="function"==typeof r?r():r,r=r||{},{...t,...r}}addInput(e,t=null){const r=document.createElement("input");for(let t in e)r.setAttribute(t,e[t]);this._addInput(r,t)}_addInput(e,t=null){const r=document.createElement("label");if(t){const e=document.createElement("span");e.textContent=t,r.appendChild(e)}r.appendChild(e),this._inputs.appendChild(r)}addSelect(e){e={label:null,name:"",optionsList:[],...e};const t=document.createElement("label");if(t.classList.add("flex-between"),e.label){const r=document.createElement("span");r.textContent=e.label,t.appendChild(r)}const r=document.createElement("select");return r.setAttribute("name",e.name),e.optionsList.forEach((({value:e,name:t})=>{const n=document.createElement("option");n.value=e,n.textContent=t,r.appendChild(n)})),t.appendChild(r),this._inputs.appendChild(t),r}error(e){e?.message&&(e=e.message),this._errorMessage.textContent=e,this._errorMessage.classList.remove("hidden")}_loading(){if(this.options.fullscreenLoading)return function(e=""){kt.querySelector(".message").textContent=e,kt.classList.add("show")}(this.options.fullscreenLoading.message??"");this._errorMessage.classList.add("hidden"),this.submitButton.disabled=!0,this.submitButton.innerHTML='<span class="spin-effect">DI</span>'}_loadingFinished(){this.options.fullscreenLoading?kt.classList.remove("show"):(this.submitButton.disabled=!1,this.submitButton.textContent=this.options.submitText)}}customElements.define("di-form",Ut,{extends:"form"});class Bt extends HTMLElement{constructor(e={}){super();const t=e.linkExisting;this.innerHTML=(e=>`\n${e?'\n<p style="text-align:center">Link this account to an email address so it doesn\'t disappear forever if you get logged out or something.</p>\n':""}\n<div class='email-login-form'></div>\n<div class="oauth-providers ${e?"displaynone":""}">\n    Or ${e?"signup":"login"} with:\n    <div class="providers-list">\n        <button provider="google">\n            <img alt="Login with Google" src="../../assets/google.png"/>\n        </button>\n        <button provider="twitch">\n            <i class="fa-brands fa-twitch"></i>\n        </button>\n        <button provider="discord">\n            <i class="fa-brands fa-discord"></i>\n        </button>\n    </div>\n</div>\n`)(t);const r=new lt(window.MAGIC_PUBLISHABLE_KEY,{extensions:[new Ct]}),n=new Ut({submitText:t?"Signup":"Login / Signup",async:!0,action:async function(){const e=n.data().email;if(t&&await Dt("/user/emailexists",{email:e}))return{error:"Email is already linked to an account."};const o=await r.auth.loginWithMagicLink({email:e});return{error:(await fetch("/user/"+(t?"linkexisting":"login"),{headers:new Headers({Authorization:"Bearer "+o}),withCredentials:!0,credentials:"same-origin",method:"POST"})).error}},success:()=>window.location="/game"});n.addInput({type:"email",name:"email",required:"required",placeholder:"Enter your e-mail address"}),this.querySelector(".email-login-form").appendChild(n),this.querySelectorAll(".providers-list button").forEach((e=>{e.addEventListener("click",(n=>{const o=e.getAttribute("provider");o&&async function(e){t||r.oauth.loginWithRedirect({provider:e,redirectURI:window.location.origin+"/oauthredirect"})}(o)}))}))}}customElements.define("di-register-form",Bt),document.querySelector(".login-page").innerHTML='\n<div class=\'login-form center-contents\'>\n    <div class="autocrawl">AUTOCRAWL</div>\n    <div class="subtitle">An Automated Dungeon Crawler Game Thing</div>\n    <di-register-form></di-register-form>\n</div>\n<a class="buttonish" href="/user/newuseranonymous">\n    Create account without logging in\n</a>\n'})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,